{"version":3,"sources":["webpack:///./node_modules/@dsf/cli-platform/designer/flow/flowContent.vue?0fc1","webpack:///./node_modules/@dsf/cli-platform/designer/flow/flow.vue?20ec","webpack:///./node_modules/core-js/modules/es.string.sub.js","webpack:///./node_modules/@dsf/cli-platform/designer/flow/flow.vue?a4ba","webpack:///./node_modules/@dsf/cli-platform/designer/flow/Lane.js","webpack:///./node_modules/@dsf/cli-platform/designer/flow/flowInfo.vue?3d10","webpack:///node_modules/@dsf/cli-platform/designer/flow/flowInfo.vue","webpack:///./node_modules/@dsf/cli-platform/designer/flow/flowInfo.vue?db69","webpack:///./node_modules/@dsf/cli-platform/designer/flow/flowInfo.vue","webpack:///./node_modules/@dsf/cli-platform/designer/flow/flowContent.vue?58e1","webpack:///node_modules/@dsf/cli-platform/designer/flow/flowContent.vue","webpack:///./node_modules/@dsf/cli-platform/designer/flow/flowContent.vue?7792","webpack:///./node_modules/@dsf/cli-platform/designer/flow/flowContent.vue","webpack:///./node_modules/@dsf/cli-platform/designer/flow/Lanes.vue?fa8b","webpack:///node_modules/@dsf/cli-platform/designer/flow/Lanes.vue","webpack:///./node_modules/@dsf/cli-platform/designer/flow/Lanes.vue?73bd","webpack:///./node_modules/@dsf/cli-platform/designer/flow/Lanes.vue","webpack:///node_modules/@dsf/cli-platform/designer/flow/flow.vue","webpack:///./node_modules/@dsf/cli-platform/designer/flow/flow.vue?eefe","webpack:///./node_modules/@dsf/cli-platform/designer/flow/flow.vue","webpack:///./node_modules/@dsf/cli-platform/designer/flow/Lanes.vue?d5e5","webpack:///./node_modules/@dsf/cli-platform/designer/flow/flow.js","webpack:///./node_modules/@dsf/cli-platform/designer/flow/flowInfo.vue?f25e"],"names":["$","createHTML","forcedStringHTMLMethod","target","proto","forced","sub","this","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","on","doSave","_v","_m","class","selected","isDrawLine","drawLine","$event","addLane","disabled","scale","rootScale","_s","Math","round","exportFlow","saveAsFlow","openFlow","exportFlowJson","startTestFlow","monitorFlow","$store","state","flow","selectedList","length","alignment","_e","ref","onScroll","style","width","toPx","height","transform","transformOrigin","has_v_head","lanes","vertical","has_h_head","horizontal","baseLine","flowInfo","lines","nodes","events","checked","config","staticStyle","model","value","callback","$$v","activeNames","expression","_l","tool","index","key","title","item","type","name","sort","dragTool","img","event","dragBoundaryEvent","url","staticRenderFns","Lane","opt","options","Object","assign","size","direction","LaneDirection","id","isRender","attributes","getAttributes","CorridorProperties","Name","ID","directives","rawName","status","itemIndex","attr","hide","isBase","slot","showHelp","showHeplerMark","$set","domProps","desc","nodeType","nodeName2","subIsDisabled","minValue","changeVesion","max","changeProperty","unit","show","editor","nodeName1","option","i","text","$index","doOpenDialog","component","lane","left","top","selectLane","hideEdit","composing","edit","dragLane","window","paramID","sID","zipFileName","BaseInfo","dsf","getWebPath","appendTo","submit","remove","alignLeft","forEach","node","point","x","$bus","$emit","alignRight","right","alignTop","y","alignBottom","bottom","alignMiddle","middle","alignCenter","center","alignHorizontal","sortX","a","b","spaces","reduce","before","after","space","push","console","log","between","alignVertical","sortY","dir"],"mappings":"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,qBACA,IACA,kBACA,WACA,OACA,gBAGA,wCAEA,eAEA,gBA1HA,SA0HA,cACA,KACA,uBACA,kCACA,qCACA,oBACA,qCACA,oEACA,8CAEA,mBACA,+BACA,+BACA,gCAEA,gBAGA,WACA,gBAIA,YAGA,eACA,uBACA,gBAGA,sCAEA,aA3JA,SA2JA,KACA,IACA,QACA,WACA,iBAEA,2CACA,yBAGA,eArKA,SAqKA,GAoBA,GAnBA,mCACA,sCACA,+BAEA,iGAEA,iCACA,gCAEA,sCACA,iCAGA,oCAEA,sCACA,gCAGA,8CACA,8BACA,KACA,0EACA,gBACA,yBACA,mDAEA,iEAGA,GACA,wBACA,2BACA,SACA,cACA,sBACA,CACA,kDACA,KACA,oCACA,mDAGA,gEAGA,gBACA,eACA,oCACA,eACA,kDACA,iBACA,iEAGA,QA7NA,SA6NA,cACA,WACA,+BACA,kCACA,2BACA,uBACA,oCACA,kBACA,YAEA,iBACA,UACA,QACA,WACA,WACA,UAEA,YAEA,iBACA,UACA,SACA,QACA,SACA,UAGA,eAEC,GAAD,iBACA,yBACA,UAEA,eAEC,GAAD,aACA,yBACA,UAEA,eAEC,GAAD,cACA,YACA,UAEA,eAEC,GAAD,YACA,YACA,UAEA,eAEC,GAAD,eACA,yFACA,UAEA,eAEC,GAAD,qBACA,yCACA,uBACA,4CACA,UAEA,YAEA,cAQA,aAxSA,SAwSA,cACA,IACA,GACA,qCACA,gBACA,qBACA,eAEA,6BACA,gCACA,mBACA,qBACA,8BAGA,oCAFA,mBACA,qBAIA,kCACA,aACA,gCACA,kDACA,sCACA,qCAGA,yBACA,aACA,qBACA,uBACA,kBACA,yBACA,SACA,MACA,CACA,mCACA,UACA,oBAEA,oCACA,iBACA,cAMA,OALA,kBACA,+CACA,yDACA,sDACA,wDACA,UAIA,QACA,2BACA,gBAEA,kBAGA,OAFA,oBACA,uGACA,KAEA,wBAZA,+CACA,GAaA,SACC,GAAD,qCACA,cACA,aACA,0DACA,yBAEA,uBACA,sBAIA,CACA,cAIA,0CACA,wDC1qB+S,I,wBCQ3SuF,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIa,EAAAA,E,QCnBX,EAAS,WAAa,IAAI1H,EAAIF,KAASG,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACiC,IAAI,UAAU/B,YAAY,WAAW,CAACF,EAAG,QAAQ,CAACiC,IAAI,QAAQ9B,MAAM,CAAC,eAAeN,EAAIa,WAAW,MAAQb,EAAImD,MAAM,MAAQnD,EAAIoD,MAAM,OAASpD,EAAIqD,OAAO,QAAUrD,EAAIsD,QAAQ,OAAStD,EAAIuD,UAAUpD,EAAG,QAAQ,CAACG,MAAM,CAAC,eAAeN,EAAIa,WAAW,MAAQb,EAAIoD,MAAM,QAAUpD,EAAIsD,QAAQ,OAAStD,EAAIuD,UAAUpD,EAAG,SAAS,CAACG,MAAM,CAAC,eAAeN,EAAIa,WAAW,MAAQb,EAAIoD,MAAM,OAASpD,EAAIqD,OAAO,QAAUrD,EAAIsD,QAAQ,OAAStD,EAAIuD,WAAW,IACpiB,EAAkB,G,oCC+BtB,GACA,mBACA,YACA,aACA,cACA,mBAEA,OACA,UACA,YACA,QAFA,WAGA,WAGA,OACA,WACA,QAFA,WAGA,WAGA,OACA,WACA,QAFA,WAGA,WAGA,OACA,YACA,QAFA,WAGA,WAGA,QACA,WACA,QAFA,WAGA,WAGA,YACA,aACA,QAFA,WAGA,WAGA,SACA,YACA,QAFA,WAGA,WAGA,QACA,YACA,QAFA,WAGA,YAIA,KAzDA,WA0DA,UAEA,OACA,SADA,SACA,GACA,GACA,cAIA,QAnEA,aAoEA,QApEA,aAqEA,SACA,KADA,WAEA,iBAEA,SAJA,WAMA,MACA,yBACA,iCACA,mBC9GkT,ICQ9S,G,UAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,OAIa,I,QCnBX,EAAS,WAAa,IAAIvD,EAAIF,KAASG,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,SAASL,EAAI+D,GAAI/D,EAAS,OAAE,SAAS2H,EAAK1D,GAAO,OAAO9D,EAAG,MAAM,CAAC+D,IAAIyD,EAAKrC,IAAMrB,EAAM5D,YAAY,OAAOM,MAAM,CAAEC,SAAUZ,EAAIsD,UAAYqE,GAAOrF,MAAM,CACzQsF,KAAM5H,EAAIwC,KAAKmF,EAAKC,MACpBC,IAAK7H,EAAIwC,KAAKmF,EAAKE,KACnBtF,MAA0B,aAAnBoF,EAAKvC,UAA2BpF,EAAIwC,KAAKmF,EAAKxC,MAAQ,GAC7D1C,OAA2B,eAAnBkF,EAAKvC,UAA6BpF,EAAIwC,KAAKmF,EAAKxC,MAAQ,IAC/D7E,MAAM,CAAC,MAAQ2D,GAAO1D,GAAG,CAAC,MAAQ,SAASQ,GAAQ,OAAOf,EAAI8H,WAAW/G,EAAQ4G,MAAS,CAACxH,EAAG,MAAM,CAACE,YAAY,QAAQ,CAACF,EAAG,MAAM,CAACE,YAAY,SAAS,CAACF,EAAG,aAAa,CAACG,MAAM,CAAC,UAA+B,aAAnBqH,EAAKvC,UAA2B,SAAW,QAAQ,MAAQ,OAAO,MAAQ,MAAM,QAAU,UAAU3B,MAAM,CAACC,MAAOiE,EAAW,OAAEhE,SAAS,SAAUC,GAAM5D,EAAIuG,KAAKoB,EAAM,SAAU/D,IAAME,WAAW,gBAAgB,CAAC3D,EAAG,MAAM,CAACE,YAAY,YAAY,CAAEsH,EAAW,OAAExH,EAAG,QAAQ,CAAC0F,WAAW,CAAC,CAACvB,KAAK,QAAQwB,QAAQ,UAAUpC,MAAOiE,EAAS,KAAE7D,WAAW,aAAa,CAACQ,KAAK,QAAQwB,QAAQ,YAAYzF,YAAY,kBAAkBC,MAAM,CAAC,UAAY,GAAG,KAAO,OAAO,YAAc,SAASkG,SAAS,CAAC,MAASmB,EAAS,MAAGpH,GAAG,CAAC,OAAS,SAASQ,GAAQ4G,EAAKnC,WAAWG,KAAOgC,EAAKrD,KAC/uBtE,EAAI+H,YAAa,MAAQ,SAAShH,GAAWA,EAAOrB,OAAOsI,WAAqBhI,EAAIuG,KAAKoB,EAAM,OAAQ5G,EAAOrB,OAAOgE,WAAW1D,EAAImC,OAAOhC,EAAG,OAAO,CAACE,YAAY,uBAAuBiC,MAAM,CACjMC,MAAOvC,EAAIwC,KAAKmF,EAAKxC,MACrBzC,UAA8B,eAAnBiF,EAAKvC,UAA8B,8BAAiCuC,EAAS,KAAI,MAAS,IACpGrH,MAAM,CAAC,KAAO,aAAaC,GAAG,CAAC,SAAW,SAASQ,GAAQ,OAAOf,EAAIiI,KAAKN,KAAQvB,KAAK,aAAa,CAACpG,EAAIS,GAAG,IAAIT,EAAIoB,GAAGuG,EAAKrD,MAAM,SAASnE,EAAG,MAAM,CAACE,YAAY,YAAYC,MAAM,CAAC,IAAM,EAAQ,SAAwDC,GAAG,CAAC,MAAQ,SAASQ,GAAQ,OAAOf,EAAIgB,QAAQ2G,EAAKvC,UAAWnB,OAAW9D,EAAG,MAAM,CAACE,YAAY,aAAaC,MAAM,CAAC,IAAM,EAAQ,SAAwDC,GAAG,CAAC,MAAQ,SAASQ,GAAQ,OAAOf,EAAIgB,QAAQ2G,EAAKvC,UAAWnB,EAAQ,OAAO9D,EAAG,OAAO,CAACE,YAAY,aAAaE,GAAG,CAAC,UAAY,SAASQ,GAAQ,OAAOf,EAAIkI,SAASnH,EAAQ4G,QAAW,KAAKxH,EAAG,MAAM,CAACE,YAAY,QAAQF,EAAG,MAAM,CAACE,YAAY,sBAAqB,IAC1sB,EAAkB,GCwDtB,GACA,aACA,OACA,OACA,WACA,QAFA,WAGA,WAGA,SACA,YACA,QAFA,WAGA,YAIA,KAhBA,WAiBA,OACA,aACA,cAGA,QAtBA,WAsBA,WACA,mDACA,eAEA,oCACA,kDACA,gEAEA,gBAGA,mDACA,iBAEA,iDACA,kBAGA,SACA,KADA,SACA,GACA,yBAEA,WAJA,SAIA,KACA,oCACA,qBAEA,QARA,SAQA,KACA,2BAEA,SAXA,SAWA,KACA,oCACA,kCACA,mCACA,4BACA,MACA,UAKA,SAtBA,SAsBA,GACA,iBAGA,kCACA,iCACA,oCACA,yCACA,oEAEA,iEAEA,gFAEA,mCACA,SACA,SACA,MACA,SAEA,mDACA,0BACA,oBAEA,SA9CA,SA8CA,GACA,iBACA,SAEA,MACA,8BACA,iCACA,oCACA,6CACA,qCACA,8BACA,GACA,OACA,0BAEA,CACA,oCACA,4BACA,GACA,oBACA,SAGA,uBACA,0CACA,8CAEA,qCACA,8BACA,YACA,kBACA,OACA,UACA,cAIA,KAnFA,SAmFA,GACA,gCAEA,SADA,UAOA,SA5FA,WA6FA,gCACA,kBCxM4S,ICQxS,G,UAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,OAIa,I,wCC4Of8H,OAAOpG,KAAP,KAwBA,OACA,YACA,YACA,WACA,cACA,SAEA,KAPA,WAQA,OACA,gBACA,cACA,cACA,eACA,eACA,QACA,SACA,WACA,YACA,UACA,cACA,YACA,gFACA,SACA,SACA,UACA,YACA,cACA,eACA,wCACA,YACA,iBACA,iBACA,sBACA,aACA,UACA,QACA,MACA,QAEA,aACA,aACA,mBACA,eACA,yBACA,gBACA,kBACA,qBACA,oBACA,gBACA,eAEA,kBACA,aACA,mBACA,eACA,kBACA,aACA,cAGA,2BACA,gBACA,kBACA,wBAIA,QAnEA,aAoEA,QApEA,WAqEA,aACA,YACA,kCAEA,wBACA,YACA,iBACA,MAHA,WAIA,yBACA,mCACA,oBACA,yBAGA,KAVA,WAUA,wKACC,EAAD,WADA,OAEA,gBAEA,cAJA,8CAMA,SAhBA,WAgBA,WAEA,kBACA,KACA,uDACA,sCACA,iBAGA,kBACA,cACA,iCAEA,mBACA,kBAGA,YAjCA,WAiCA,WACA,+CACA,iBACA,4BACA,WAEA,kCACA,QACA,cACA,gBACA,gCACA,gCACA,gBACA,CACA,YACA,aAEA,GAGA,4BACA,4BACA,qCACA,yCAIA,mBACA,YAEA,cACA,WACA,WACA,YACA,uBACA,gBACA,CACA,YACA,aAEA,GAEA,mCAGA,UACA,8BACA,oBACA,eACA,oBAGA,SACA,6BACA,aACA,wDACA,qDAGA,uBACA,qCACA,QACA,YACA,YACA,YACA,YACA,oBACA,QACA,oBACA,wBACA,sBAEA,MAGA,iBArEA,QAwEC,GAAD,oBACA,QACA,aACA,wDACA,qDAEA,2BACA,QACA,YACA,YACA,YACA,YACA,oBACA,gBACA,QACA,oBACA,+BAIC,GAAD,oBACA,QACA,iBACA,QACA,YACA,YACA,cACA,sBACA,8BAIA,qBACA,gCAIA,eAGA,OAvJA,WAyJA,qCACA,OACA,UACA,kCACA,YACA,YACA,aACA,UACA,cACA,aAEA,iBAGA,gCACA,YACA,6BACA,2BAEA,cADA,QACA,KAGA,WACA,mCAGA,OAFA,sCACA,aACA,4BAkBA,IAdA,OACA,6DACA,oCACA,iCACA,oCAIA,mBACA,8BAEA,KACA,KAEA,0BACA,iBAEA,gBAEA,SACA,KACA,uBACA,KACA,4BACA,WACA,gBAKA,GADA,qBACA,EACA,4BACA,WACA,gBAGA,OACA,OACA,OACA,MAEA,WAGA,4BACA,WACA,OAEA,2BAEA,iCAEA,IADA,gBACA,gCACA,uBACA,4BACA,8BACA,8BACA,gBACA,UAEA,6EACA,sCACA,IACA,8EAIA,sCACA,6BAGA,iCACA,gBACA,qCACA,eAEA,sCACA,IACA,qCACA,iBAOA,2BACA,oCACA,gCACA,oBAKA,IA9HA,eA8HA,GACA,iBACA,SACA,oCACA,kBACA,UAIA,4BACA,4BACA,qCACA,yCAIA,uCACA,kBACA,gCAlBA,8BAoBA,kCACA,wBACA,QACA,8CAEA,kBACA,WACA,kBACA,+BAEA,mCACA,kBACA,wCAEA,mBACA,+BAGA,6CACA,4BACA,2BACA,WACA,kDACA,kBACA,+BAEA,2CACA,0BACA,2BACA,WACA,gDACA,kBACA,+BAEA,OACA,yBAEA,WACA,+BACA,kBACA,UACA,6BAEA,gCAGA,kBACA,iCAGA,UA3VA,WA2VA,WACA,kDACA,aACA,cACA,sBACA,mBAEA,aACA,sBAGA,kDACA,yBACA,kDACA,gBACA,8BACA,eAEA,aACA,iBACA,eAEA,cACA,kBACA,oDACA,iBACA,gBACA,iBACA,oCAGA,6CACA,gBAEA,4CACA,eAEA,wDACA,4CACA,oCACA,oDACA,wCAEA,sDACA,oDACA,4CACA,8CACA,kDAEA,2BACA,UACA,YAEA,0DACA,iCAMA,sGACA,eACA,kCACA,oBACA,kEACA,UACA,gBAOA,0DACA,aAGA,eACA,mBACA,gBAGA,kBACA,sBAGA,eACA,mBAGA,iDACA,oBACA,qBACA,iBACA,WAEA,qCAGA,mBACA,qBACA,WAEA,qCAGA,eACA,qBAIA,iEAEA,8CACA,2CACA,qBAGA,+CACA,iBACA,mBAIA,YAvdA,SAudA,gBACA,eACA,SACA,6BACA,cAEA,wBACA,wBACA,yBACA,uBAEA,sBAEA,iBACA,YACA,cAEA,qCAGC,GAAD,oBACA,QACA,aACA,wDACA,qDAGA,uBACA,qCACA,QACA,YACA,YACA,YACA,YACA,oBACA,QACA,oBACA,wBACA,sBAEA,QAGC,GAAD,qBACA,oBACA,eACA,2BAGA,oBAEA,YA1gBA,SA0gBA,SACA,2DACA,kBACA,kBA0BA,OAzBA,+BACA,UACA,UACA,WAGA,IACA,cAEA,kBACA,UAEA,0CACA,uBACA,oBACA,YACA,8DACA,+DACA,qBACA,cACA,0DACA,6BAEA,6BACA,6CACA,GAEA,eAziBA,SAyiBA,GACA,oBACA,mBACA,UACA,YAGA,gBAhjBA,SAgjBA,cAEA,4CACA,gBACA,kBACA,uBACA,uEACA,GACA,oBACA,qBAEA,mDACA,YACA,YACA,iCACA,UACA,yBAIA,SApkBA,SAokBA,SACA,yCAEA,gBAvkBA,SAukBA,GACA,OACA,UACA,WAEA,oCACA,oBACA,OACA,UACA,YAGA,UAnlBA,SAmlBA,cACA,4BACA,gGAEA,wBAEA,oCACA,eACA,WACA,GACA,4BACA,6BAEA,wBACA,4BAEA,0BAEA,aArmBA,SAqmBA,GACA,oBACA,WACA,8CACA,+CACA,iBAEA,GADA,yDACA,gBAGA,+CACA,gCACA,gDACA,mDAEA,sCAEA,GACA,iEAGA,iBA1nBA,SA0nBA,KACA,yCACA,qBAIA,kBACA,sCACA,uCAGA,gCACA,EAEA,uCAXA,MAaA,kBA1oBA,SA0oBA,cAEA,KACA,uBACA,6EAEA,6BAEA,SACA,KACA,KAsBA,OArBA,uBACA,gCACA,MAGA,MAEA,EADA,qBACA,gCAEA,yBAEA,6BACA,SAEA,wBACA,mBACA,6BACA,6BACA,eAGA,CACA,cACA,YACA,aAGA,mBAhrBA,SAgrBA,SACA,YACA,uBACA,kBACA,qBACA,qBAIA,YACA,uBACA,kBACA,sBACA,oBAKA,gBAlsBA,SAksBA,cACA,uBACA,yBAEA,+CACA,UACA,SACA,aAEA,YAGA,cACA,wBACA,QACA,YACA,YACA,YACA,oBACA,QACA,0BAKA,aA3tBA,SA2tBA,cACA,4CACA,IAIA,EAJA,uDADA,EAEA,4BAFA,EAEA,cAFA,EAEA,YAFA,EAEA,SACA,0BACA,KAEA,oCACA,iBAEA,GADA,SACA,CACA,oBACA,sBAEA,qBACA,YACA,KAEA,8BAEA,YACA,aAEA,GACA,wBAGA,6CAEA,oBACA,uBACA,kBACA,kCAEA,YA7vBA,SA6vBA,KACA,YAEA,gBACA,MACA,eAEA,kBAEA,0BACA,YACA,sBACA,QACA,mBACA,oEACA,oEACA,sBAEA,CAEA,yDACA,yBACA,2BAGA,IAMA,GALA,GACA,8BACA,+BAGA,gBAEA,OACA,oBACA,gCACA,sBACA,KACA,OACA,MACA,MACA,QAEA,gCAGA,GACA,iBACA,kBAGA,oBACA,cACA,cACA,8BACA,MAIA,OAEA,kDACA,0CACA,MACA,OACA,OACA,UACA,UACA,iBAEA,2BAIA,OAFA,6BACA,cACA,OAEA,aAz0BA,SAy0BA,kBACA,kBAqBA,OApBA,mBACA,GAEA,wBAGA,+BACA,WACA,6BACA,wBACA,gBACA,CACA,YACA,aAEA,GAEA,oCAGA,GAEA,YAj2BA,SAi2BA,GACA,mBACA,+CACA,4CACA,oDACA,MACA,QAEA,0CACA,6BACA,uBAEA,0DACA,mBACA,oEACA,oEACA,kBAEA,0BACA,SACA,CAEA,GACA,yBACA,yBACA,iBAEA,yBACA,wBAEA,gDACA,qDACA,uDACA,MAGA,OAEA,kDACA,0CACA,MACA,OACA,OACA,UACA,UACA,iBAEA,2BACA,iDACA,iCACA,mCACA,mBACA,wDAGA,8CACA,yEACA,+CACA,2CACA,gEAGA,yCAEA,mBACA,kCAEA,kBAp6BA,SAo6BA,KACA,2DACA,sCACA,8CACA,4CACA,wBACA,8BACA,oCACA,oBACA,YACA,qCACA,uCACA,iCACA,kCACA,qBACA,0DACA,6BAEA,0CACA,kDAEA,cAz7BA,SAy7BA,GACA,mBAEA,2CACA,+GACA,kDACA,iCACA,eACA,QACA,iBACA,kDACA,IACA,2CACA,OACA,oBAEA,+CAEA,OACA,OACA,iCACA,uEAGA,mCACA,MACA,6CACA,eAEA,gEAKA,OAJA,6BACA,uDACA,6CACA,2CAIA,0CAEA,MACA,iBACA,kDACA,IACA,2CACA,OACA,oBAEA,+CAEA,uCACA,MACA,6CACA,gEAGA,OAFA,6CACA,4CAKA,4CACA,+CAGA,aAx/BA,SAw/BA,cASA,GARA,iBACA,WACA,oBAEA,gBACA,2CAGA,gBAGA,+DACA,sCACA,6BACA,+BACA,GACA,OACA,iCACA,uEAIA,uCACA,MAIA,GAFA,yBAEA,oBACA,2EACA,uBACA,wBAEA,iCACA,qBACA,KACA,OACA,YACA,aAEA,cACA,4BAKA,uCACA,2CACA,mBAGA,6CACA,uDACA,uDACA,uCACA,gCACA,2BACA,+CACA,8GAKA,YAvjCA,SAujCA,GACA,aACA,gCACA,sCACA,oBAIA,qBAGA,eAlkCA,SAkkCA,KACA,wBACA,YACA,mBACA,6BAGA,cAzkCA,SAykCA,gBACA,KAMA,GALA,iCACA,cACA,6BAGA,cAIA,6DACA,kDACA,uBACA,uBACA,+CACA,cACA,mBACA,gBACA,cACA,0BAKA,SAlmCA,SAkmCA,WACA,EADA,OAEA,IAUA,OATA,uBACA,yBACA,MACA,MACA,IACA,QAIA,GAEA,YAhnCA,SAgnCA,KACA,iFAEA,UAEA,cArnCA,SAqnCA,KACA,yDACA,UACA,YAEA,iCAEA,WA5nCA,SA4nCA,GACA,oBACA,CACA,iBACA,QAEA,GAEA,GACA,SACA,UAEA,sBACA,yDACA,MACA,QAEA,QACA,QAKA,OAHA,oBACA,mBACA,mBACA,GAGA,QAtpCA,SAspCA,GACA,yBACA,SACA,4EACA,oBACA,UAGA,WA9pCA,SA8pCA,KACA,yBACA,mDACA,oBACA,kBAEA,2CAEA,oBAEA,OADA,oBACA,GAEA,YA1qCA,SA0qCA,KAEA,QA5qCA,SA4qCA,cACA,4CAGA,eACA,gDAEA,iBACA,uBACA,uBACA,kBACA,WAEC,GAAD,+BAEA,sCACC,GAAD,0BACA,mDACA,mBACC,GAAD,+BACA,sCACC,GAAD,gCAEA,IADA,mBACA,8BACA,6CACA,GACA,mBAGA,yEAEA,uCAEA,kBAGA,WAhtCA,SAgtCA,SAEA,EAFA,OAGA,sBACA,+DACA,uBAFA,CAMA,wCACA,oCACA,sCACA,eACA,SACA,QAEA,+BACA,0BACA,0BACA,MACA,+BACA,2BACA,0BACA,MACA,6BAEA,gBACA,GACA,iCACA,uCACA,WACA,qBACA,uCACA,cAEA,oBAGA,GACA,KACA,YACA,uBACA,OACA,YACA,oBACA,gBACA,QACA,UACA,uCACA,iCACA,mCACA,8BAEA,uCACA,UACA,eACA,KACA,uBACA,uBAIA,iBACA,+BAEA,6DAOA,mCACA,iCACA,GACA,mBAGA,kCACA,gCACA,GACA,mBAKA,4BACA,kBACA,aAGA,IAFA,WAEA,2BACA,0CACA,GACA,mBAGA,cACA,KAIA,iBAGA,WAzzCA,SAyzCA,KAEA,MACA,sBACA,+DACA,uBAFA,CAMA,WACA,wCACA,oCACA,eACA,MACA,gCAGA,gBA10CA,SA00CA,SACA,+BACA,yBACA,MACA,6BACA,MACA,qBAGA,MACA,4BACA,MACA,oBAGA,cACA,uCAEA,YA51CA,SA41CA,OACA,iEACA,mCAEA,oCACA,uBACA,KACA,OACA,uBACA,wBAEA,yBACA,qCAMA,QA92CA,SA82CA,KACA,iBACA,YACA,WAGA,WAp3CA,SAo3CA,GACA,kBACA,6CACA,yBACA,eACA,mDACA,mBAEA,yBAGA,uBAEA,mCACA,YACA,OACA,gBAEA,eAEA,SAx4CA,SAw4CA,GACA,eACA,sCACA,sBACA,2BAIA,aAh5CA,SAg5CA,GACA,+BACA,YAGA,IADA,SACA,0BACA,iBACA,+BACA,MACA,wCACA,WAGA,UAGA,WAh6CA,SAg6CA,GACA,iCACA,YAGA,IADA,SACA,2BACA,kBACA,+BACA,MACA,sCACA,WAGA,UAEA,oBA/6CA,SA+6CA,GAEA,IADA,SACA,0BACA,iBACA,UAEA,kCACA,iBACA,UAEA,6CACA,4BACA,UAEA,2CACA,sBACA,UAEA,UAEA,SAn8CA,WAo8CA,kCAEA,OAt8CA,WAu8CA,wCACA,qCACA,OACA,OAEA,oDAEA,yCAEA,qBACA,2BAEA,aAGA,4DAEA,0CAEA,oBACA,2BAEA,cAIA,QACA,IACA,gCACA,kCACA,iCAEA,sCACA,wCAGA,qCACA,yCAEA,WA9+CA,SA8+CA,GAEA,QACA,IACA,6BACA,kCACA,iCAEA,8DAEA,gEAGA,4BACA,+BACA,+BAEA,WA//CA,SA+/CA,GACA,WACA,SACA,WACA,UACA,uBACA,wCAEA,QAEA,wBACA,yCAEA,SAEA,WACA,qDACA,YACA,cAEA,uBACA,2BAEA,2BAEA,wBACA,2BAEA,4BAEA,YACA,qDACA,YACA,cAEA,uBACA,2BAEA,QAEA,wBACA,2BAEA,SAIA,IACA,MADA,qBAEA,mBACA,6BACA,eACA,oBAEA,kBACA,4BACA,cACA,mBAEA,kBACA,6BACA,eACA,oBAGA,iCACA,eACA,2CACA,eACA,oBAEA,iCACA,gBACA,2CACA,cACA,oBAGA,iBA7kDA,SA6kDA,GAEA,cACA,UACA,WACA,SACA,sBACA,mCAEA,QAEA,uBACA,oCAEA,QAGA,gBACA,aAEA,iBACA,cAEA,8BACA,iBACA,YACA,OACA,OACA,MACA,OAEA,OACA,MACA,UAIA,UAlnDA,SAknDA,GACA,4BACA,mBACA,6BACA,+BACA,MACA,yDACA,UACA,YAEA,0BACA,iDAEA,8CADA,2BAIA,gCAGA,iDAEA,8CADA,2BAIA,uCAMA,+BAGA,cAnpDA,SAmpDA,GACA,gCAEA,gBAtpDA,SAspDA,GAEA,wBACA,kEACA,UACA,YAEA,0BACA,UACA,WAEA,gCAEA,WAnqDA,SAmqDA,GACA,yBACA,OACA,UACA,WAEA,2CACA,oBACA,GACA,UACA,WAEA,iBACA,iBACA,kBACA,SAEA,SACA,KAWA,OAVA,0BACA,uBACA,MAEA,2BACA,uBACA,MAEA,2CACA,8BAIA,QAnsDA,WAwsDA,IAJA,uBACA,mBACA,mBACA,mBACA,6BACA,oBACA,cACA,aAEA,sBACA,qBAEA,cACA,aAEA,uBACA,sBAGA,oCAEA,IADA,oBACA,wBACA,gBACA,eAEA,gBACA,eAEA,gBACA,eAEA,gBACA,eAIA,OACA,IACA,IACA,QACA,WAGA,eA/uDA,SA+uDA,GAEA,MAsBA,OAvBA,kBAEA,cAEA,iBAEA,QAEA,iBA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","file":"static/js/Flow.js","sourcesContent":["export * from \"-!../../../../mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../vue-loader/lib/loaders/stylePostLoader.js!../../../../postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./flowContent.vue?vue&type=style&index=0&lang=scss&\"","export * from \"-!../../../../mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../vue-loader/lib/loaders/stylePostLoader.js!../../../../postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./flow.vue?vue&type=style&index=0&lang=scss&\"","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/string-html-forced');\n\n// `String.prototype.sub` method\n// https://tc39.es/ecma262/#sec-string.prototype.sub\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('sub') }, {\n  sub: function sub() {\n    return createHTML(this, 'sub', '', '');\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ds_workflow ds-designer\",attrs:{\"id\":\"desginer\"}},[_c('div',{staticClass:\"designer-head\"},[_c('div',{staticClass:\"desginer_tools\"},[_c('a',{staticClass:\"ds-button--icon-text\",on:{\"click\":_vm.doSave}},[_c('i',{staticClass:\"iconfont icon-baocun\"}),_c('span',[_vm._v(\"保存\")])]),_vm._m(0),_vm._m(1),_vm._m(2),_vm._m(3),_c('a',{staticClass:\"ds-button--icon-text\",class:{ selected: _vm.isDrawLine },on:{\"click\":_vm.drawLine}},[_c('i',{staticClass:\"iconfont icon-liujisuan\"}),_c('span',[_vm._v(\"连线\")])]),_c('a',{staticClass:\"ds-button--icon-text\"},[_c('i',{staticClass:\"iconfont icon-iframetianjia\"}),_vm._m(4),_c('dl',{staticClass:\"layui-nav-child\"},[_c('dd',{on:{\"click\":function($event){return _vm.addLane('vertical')}}},[_c('span',[_vm._v(\"泳道(垂直)\")])]),_c('dd',{on:{\"click\":function($event){return _vm.addLane('horizontal')}}},[_c('span',[_vm._v(\"泳道(水平)\")])])])]),_c('a',{staticClass:\"ds-button--icon-text scale\"},[_c('div',{staticClass:\"scale-com\"},[_c('i',{staticClass:\"el-icon-minus\",class:{ disabled: _vm.scale <= 0.4 },on:{\"click\":function($event){return _vm.rootScale('down')}}}),_c('span',{staticClass:\"percent\"},[_vm._v(_vm._s(Math.round(_vm.scale * 100))+\"%\")]),_c('i',{staticClass:\"el-icon-plus\",class:{ disabled: _vm.scale >= 2 },on:{\"click\":function($event){return _vm.rootScale('up')}}})]),_c('span',[_vm._v(\"缩放\")])]),_c('a',{staticClass:\"ds-button--icon-text\"},[_c('i',{staticClass:\"iconfont icon-dakai\"}),_vm._m(5),_c('dl',{staticClass:\"layui-nav-child\"},[_c('p',{on:{\"click\":function($event){return _vm.exportFlow()}}},[_c('span',[_vm._v(\"创建组\")])]),_c('p',{staticClass:\"label\",on:{\"click\":function($event){return _vm.saveAsFlow()}}},[_c('span',[_vm._v(\"保存为组件\")])]),_c('p',{on:{\"click\":function($event){return _vm.openFlow()}}},[_c('span',[_vm._v(\"选择组\")])])])]),_c('a',{staticClass:\"ds-button--icon-text\"},[_c('i',{staticClass:\"iconfont icon-lianjieliu\"}),_vm._m(6),_c('dl',{staticClass:\"layui-nav-child\"},[_vm._m(7),_c('p',{staticClass:\"child\"},[_vm._v(\"DFR\")]),_c('p',{staticClass:\"child\"},[_vm._v(\"BPMN2.0\")]),_c('p',{staticClass:\"child\"},[_vm._v(\"XML\")]),_c('p',{staticClass:\"label child\",on:{\"click\":function($event){return _vm.exportFlowJson()}}},[_vm._v(\"JSON\")]),_vm._m(8),_c('p',{staticClass:\"child\"},[_vm._v(\"DFR\")]),_c('p',{staticClass:\"child\"},[_vm._v(\"BPMN2.0\")]),_c('p',{staticClass:\"child\"},[_vm._v(\"XML\")]),_c('p',{staticClass:\"label child\"},[_vm._v(\"JSON\")]),_c('p',{staticClass:\"label\",on:{\"click\":function($event){return _vm.startTestFlow()}}},[_c('span',[_vm._v(\"仿真测试\")])]),_c('p',{on:{\"click\":function($event){return _vm.monitorFlow()}}},[_c('span',[_vm._v(\"浏览监控\")])])])]),(_vm.$store.state.flow.selectedList && _vm.$store.state.flow.selectedList.length > 1)?_c('a',{staticClass:\"ds-button--icon-text\"},[_c('i',{staticClass:\"iconfont icon-lianjieliu\"}),_vm._m(9),_c('dl',{staticClass:\"layui-nav-child\"},[_c('dd',{on:{\"click\":function($event){return _vm.alignment('left')}}},[_c('span',[_vm._v(\"左对齐(L)\")])]),_c('dd',{on:{\"click\":function($event){return _vm.alignment('center')}}},[_c('span',[_vm._v(\"水平居中(C)\")])]),_c('dd',{on:{\"click\":function($event){return _vm.alignment('right')}}},[_c('span',[_vm._v(\"右对齐(R)\")])]),_c('dd',{on:{\"click\":function($event){return _vm.alignment('top')}}},[_c('span',[_vm._v(\"顶端对齐(T)\")])]),_c('dd',{on:{\"click\":function($event){return _vm.alignment('middle')}}},[_c('span',[_vm._v(\"垂直居中(M)\")])]),_c('dd',{on:{\"click\":function($event){return _vm.alignment('bottom')}}},[_c('span',[_vm._v(\"底端对齐(B)\")])]),_c('dd',{on:{\"click\":function($event){return _vm.alignment('horizontal')}}},[_c('span',[_vm._v(\"横向分布(H)\")])]),_c('dd',{on:{\"click\":function($event){return _vm.alignment('vertical')}}},[_c('span',[_vm._v(\"纵向分布(V)\")])])])]):_vm._e()])]),_c('div',{staticClass:\"designer-content\"},[_c('div',{staticClass:\"designer-center\"},[_c('div',{ref:\"ds_page\",staticClass:\"ds_control ds_page layui-form leftRight_ design\",on:{\"scroll\":function($event){return _vm.onScroll($event)}}},[_c('div',{ref:\"container\",staticClass:\"flow\",style:({\n            width: _vm.toPx(_vm.scale > 1 ? _vm.width * _vm.scale : _vm.width / _vm.scale),\n            height: _vm.toPx(_vm.scale > 1 ? _vm.height * _vm.scale : _vm.height / _vm.scale),\n            transform: (\"scale(\" + _vm.scale + \") translateZ(0)\"),\n            transformOrigin: 'left top',\n          }),attrs:{\"id\":\"flow_box\"}},[_c('div',{ref:\"root\",staticClass:\"root\",class:{\n              has_v_head: _vm.lanes && _vm.lanes.vertical.length > 0,\n              has_h_head: _vm.lanes && _vm.lanes.horizontal.length > 0,\n            },style:({\n              width: _vm.toPx(_vm.scale > 1 ? _vm.width * _vm.scale : _vm.width / _vm.scale),\n              height: _vm.toPx(_vm.scale > 1 ? _vm.height * _vm.scale : _vm.height / _vm.scale),\n            })},[(_vm.baseLine.showV)?_c('span',{staticClass:\"baseLine_v\",style:({ transform: (\"translate3d(\" + (_vm.baseLine.left) + \"px, 0, 0)\") })}):_vm._e(),(_vm.baseLine.showH)?_c('span',{staticClass:\"baseLine_h\",style:({ transform: (\"translate3d(0, \" + (_vm.baseLine.top) + \"px, 0)\") })}):_vm._e(),_c('flow-content',{ref:\"flowContent\",attrs:{\"flow-info\":_vm.flowInfo,\"is-draw-line\":_vm.isDrawLine,\"lines\":_vm.lines,\"nodes\":_vm.nodes,\"lanes\":_vm.lanes,\"events\":_vm.events,\"checked\":_vm.checked,\"config\":_vm.config}}),_c('div',{ref:\"backLayout\",staticClass:\"backgroundLayout\"},[_c('div',{ref:\"v_lane\",staticClass:\"v_lane\"},[_c('lanes',{attrs:{\"lanes\":_vm.lanes && _vm.lanes.vertical,\"checked\":_vm.checked},on:{\"addLane\":_vm.addLane}})],1),_c('div',{ref:\"h_lane\",staticClass:\"h_lane\"},[_c('lanes',{attrs:{\"lanes\":_vm.lanes && _vm.lanes.horizontal,\"checked\":_vm.checked},on:{\"addLane\":_vm.addLane}})],1)])],1)])])]),_c('div',{staticClass:\"designer-left\",staticStyle:{\"margin-top\":\"60px\"}},[_c('div',{staticClass:\"designer-left-tools\"},[_c('el-collapse',{attrs:{\"accordion\":\"\"},model:{value:(_vm.activeNames),callback:function ($$v) {_vm.activeNames=$$v},expression:\"activeNames\"}},[_vm._l((_vm.flowTools),function(tool,index){return _c('el-collapse-item',{key:index,attrs:{\"title\":tool.title,\"name\":index}},[_c('div',{staticClass:\"layui-colla-content layui-show\"},[_vm._l((tool.data),function(item){return _c('div',{key:item.type,staticClass:\"ds_tool_item nodeButton\",attrs:{\"title\":item.name,\"sort\":item.sort,\"nodetype\":item.type,\"draggable\":\"true\"},on:{\"dragstart\":function($event){return _vm.dragTool($event, item)}}},[_c('img',{attrs:{\"src\":item.img,\"draggable\":\"false\"}}),_vm._v(\" \"+_vm._s(item.name)+\" \")])}),_c('div',{staticStyle:{\"clear\":\"both\"}})],2)])}),_c('el-collapse-item',{attrs:{\"title\":\"边界事件\",\"name\":\"5\"}},[_c('div',{staticClass:\"layui-colla-content layui-show\"},_vm._l((_vm.boundaryEvents),function(event){return _c('div',{key:event.type,staticClass:\"nodeButton ds_tool_event\",attrs:{\"title\":event.name,\"nodetype\":event.type}},[_c('div',{staticClass:\"tool_event_drag\",attrs:{\"draggable\":\"true\"},on:{\"dragstart\":function($event){return _vm.dragBoundaryEvent($event, event)}}},[_c('img',{attrs:{\"src\":event.url,\"draggable\":\"false\"}})]),_c('span',[_vm._v(_vm._s(event.name))])])}),0)])],2)],1)]),_c('div',{staticClass:\"designer-right\",attrs:{\"id\":\"propertyBox\"}},[_c('flow-info',{attrs:{\"checked\":_vm.checked,\"nodes\":_vm.nodes,\"lines\":_vm.lines,\"flow-info\":_vm.flowInfo}})],1)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('a',{staticClass:\"ds-button--icon-text\"},[_c('i',{staticClass:\"iconfont icon-baocun\"}),_c('span',[_vm._v(\"发布\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('a',{staticClass:\"ds-button--icon-text\"},[_c('i',{staticClass:\"iconfont icon-iframetianjia\"}),_c('span',[_vm._v(\" 版本 \"),_c('i',{staticClass:\"iconfont icon-xia1\"})]),_c('dl',{staticClass:\"layui-nav-child\"},[_c('p',{staticClass:\"label\"},[_c('span',[_vm._v(\"当前版本\")])]),_c('p',[_c('span',[_vm._v(\"2.0.11 2020-4-10 16：20： 10\")])]),_c('p',{staticClass:\"label\"},[_c('span',[_vm._v(\"历史版本\")])]),_c('p',[_c('span',[_vm._v(\"2.0.11 2020-4-10 16：20： 10\")])]),_c('p',[_c('span',[_vm._v(\"2.0.11 2020-4-10 16：20： 10\")])]),_c('p',[_c('span',[_vm._v(\"2.0.11 2020-4-10 16：20： 10\")])]),_c('p',[_c('span',[_vm._v(\"2.0.11 2020-4-10 16：20： 10\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('a',{staticClass:\"ds-button--icon-text\"},[_c('i',{staticClass:\"iconfont icon-shebeikaifa1\"}),_c('span',[_vm._v(\"模板库\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('a',{staticClass:\"ds-button--icon-text\"},[_c('i',{staticClass:\"iconfont icon-baocun\"}),_c('span',[_vm._v(\"关闭\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[_vm._v(\" 泳道 \"),_c('i',{staticClass:\"iconfont icon-xia1\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[_vm._v(\" 组件 \"),_c('i',{staticClass:\"iconfont icon-xia1\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[_vm._v(\" 更多 \"),_c('i',{staticClass:\"iconfont icon-xia1\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"title\"},[_c('span',[_vm._v(\"导出\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"title\"},[_c('span',[_vm._v(\"导入\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[_vm._v(\" 对齐方式 \"),_c('i',{staticClass:\"iconfont icon-xia1\"})])}]\n\nexport { render, staticRenderFns }","import { LaneDirection } from './tools';\r\n\r\nimport { getAttributes } from \"./common\";\r\nimport {\r\n  CorridorProperties,\r\n} from \"./propertySource\";\r\n\r\n//泳道类\r\nconst Lane = function (opt) {\r\n  var options = Object.assign({ size: 260, direction: LaneDirection.vertical }, opt);\r\n  this.id = options.id || null;\r\n  this.name = options.name || \"\";\r\n  this.index = options.index;\r\n  this.direction = options.direction;\r\n  this.isRender = false;\r\n  this.size = options.size;\r\n\r\n  if (!options.attributes) {\r\n    this.attributes = getAttributes(CorridorProperties());\r\n    this.attributes.Name = this.name;\r\n    this.attributes.ID = this.id;\r\n  } else {\r\n    this.attributes = { ...options.attributes };\r\n  }\r\n}\r\nexport default Lane;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ds_attr_root\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.status === 'base'),expression:\"status === 'base'\"}],staticClass:\"base\"},[_c('p',{staticClass:\"title\"},[_c('span',[_vm._v(\"常用\")]),_c('el-button',{staticClass:\"el-button-all\",attrs:{\"size\":\"mini\",\"round\":\"\"},on:{\"click\":function($event){_vm.status = 'advanced'}}},[_c('span',[_vm._v(\"全部\")]),_c('i',{staticClass:\"el-icon-arrow-right\"})])],1),_c('div',{staticClass:\"el-collapse-item__content\"},_vm._l((_vm.data),function(item,itemIndex){return _c('el-form',{key:itemIndex,staticClass:\"colla-content\",attrs:{\"label-position\":\"top\",\"label-width\":\"80px\"}},_vm._l((item.attributes),function(attr,index){return _c('div',{key:index,staticClass:\"property-item\"},[(!attr.hide && attr.isBase)?_c('el-form-item',[_c('span',{staticClass:\"property-item-name\",attrs:{\"slot\":\"label\"},slot:\"label\"},[_vm._v(\" \"+_vm._s(attr.name)+\" \"),(attr.desc)?_c('DsfIcon',{staticStyle:{\"margin-left\":\"5px\",\"cursor\":\"pointer\"},attrs:{\"name\":\"bangzhuzhongxin\"},on:{\"click\":function($event){return _vm.showHelp(attr)}}}):_vm._e(),_c('el-dialog',{attrs:{\"visible\":attr.showHeplerMark,\"title\":attr.name,\"append-to-body\":true,\"width\":'500px'},on:{\"update:visible\":function($event){return _vm.$set(attr, \"showHeplerMark\", $event)}}},[_c('div',{staticStyle:{\"max-height\":\"500px\",\"min-height\":\"300px\",\"overflow\":\"auto\"}},[_c('span',{staticStyle:{\"display\":\"inline-block\",\"line-height\":\"1.5em\"},domProps:{\"innerHTML\":_vm._s(attr.desc)}})])])],1),(attr.nodeType === 'flow' && attr.nodeName2 === 'Version')?_c('div',{staticClass:\"inline\"},[_c('el-input-number',{attrs:{\"controls-position\":\"right\",\"disabled\":_vm.subIsDisabled,\"min\":_vm.minValue(attr, 0)},on:{\"input\":function($event){return _vm.changeVesion(attr, 0)}},model:{value:(attr.value0),callback:function ($$v) {_vm.$set(attr, \"value0\", $$v)},expression:\"attr.value0\"}}),_c('span',[_vm._v(\".\")]),_c('el-input-number',{attrs:{\"controls-position\":\"right\",\"disabled\":_vm.subIsDisabled,\"min\":_vm.minValue(attr, 1)},on:{\"input\":function($event){return _vm.changeVesion(attr, 1)}},model:{value:(attr.value1),callback:function ($$v) {_vm.$set(attr, \"value1\", $$v)},expression:\"attr.value1\"}}),_c('span',[_vm._v(\".\")]),_c('el-input',{attrs:{\"disabled\":\"disabled\"},model:{value:(attr.value2),callback:function ($$v) {_vm.$set(attr, \"value2\", $$v)},expression:\"attr.value2\"}})],1):_vm._e(),(attr.unit)?_c('div',{staticClass:\"inline\"},[_c('el-input-number',{attrs:{\"controls-position\":\"right\",\"disabled\":_vm.subIsDisabled,\"min\":1,\"max\":attr.max},on:{\"input\":function($event){return _vm.changeProperty(attr)}},model:{value:(attr.value),callback:function ($$v) {_vm.$set(attr, \"value\", $$v)},expression:\"attr.value\"}}),_c('span',{staticClass:\"unit\"},[_vm._v(_vm._s(attr.unit))])],1):_vm._e(),(_vm.show(attr))?_c('el-input',{attrs:{\"disabled\":_vm.subIsDisabled || !attr.editor},on:{\"input\":function($event){return _vm.changeProperty(attr)}},model:{value:(attr.value),callback:function ($$v) {_vm.$set(attr, \"value\", $$v)},expression:\"attr.value\"}}):_vm._e(),(attr.editor === 'textarea')?_c('el-input',{attrs:{\"disabled\":_vm.subIsDisabled,\"type\":\"textarea\",\"placeholder\":\"请输入内容\"},on:{\"input\":function($event){return _vm.changeProperty(attr)}},model:{value:(attr.value),callback:function ($$v) {_vm.$set(attr, \"value\", $$v)},expression:\"attr.value\"}}):_vm._e(),(attr.editor && attr.editor.type === 'combobox')?_c('el-select',{attrs:{\"name\":(\"\" + (attr.nodeName1 + '_' + attr.nodeName2)),\"disabled\":_vm.subIsDisabled},on:{\"change\":function($event){return _vm.changeProperty(attr)}},model:{value:(attr.value),callback:function ($$v) {_vm.$set(attr, \"value\", $$v)},expression:\"attr.value\"}},_vm._l((attr.editor.options.data),function(option,i){return _c('el-option',{key:i,attrs:{\"label\":option.text,\"value\":option.value}})}),1):_vm._e(),(attr.editor && attr.editor.type === 'radio')?_c('el-radio-group',{attrs:{\"disabled\":_vm.subIsDisabled},on:{\"change\":function($event){return _vm.changeProperty(attr)}},model:{value:(attr.value),callback:function ($$v) {_vm.$set(attr, \"value\", $$v)},expression:\"attr.value\"}},_vm._l((attr.editor.options.data),function(option,$index){return _c('el-radio',{key:$index,attrs:{\"label\":option.value}},[_vm._v(\" \"+_vm._s(option.text)+\" \")])}),1):_vm._e(),(attr.editor && attr.editor.type === 'checkbox')?_c('el-checkbox-group',{attrs:{\"disabled\":_vm.subIsDisabled},on:{\"change\":function($event){return _vm.changeProperty(attr)}},model:{value:(attr.value),callback:function ($$v) {_vm.$set(attr, \"value\", $$v)},expression:\"attr.value\"}},_vm._l((attr.editor.options.data),function(option,$index){return _c('el-checkbox',{key:$index,attrs:{\"label\":option.value}},[_vm._v(\" \"+_vm._s(option.text)+\" \")])}),1):_vm._e(),(attr.type === 'dialog')?_c('DsfButton',{class:[attr.class],attrs:{\"type\":\"plain\",\"icon\":\"shezhi\"},on:{\"click\":function($event){return _vm.doOpenDialog(attr)}}},[_vm._v(\" \"+_vm._s(_vm.subIsDisabled ? \"查看\" : \"设置\")+\" \")]):_vm._e()],1):_vm._e()],1)}),0)}),1)]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.status === 'advanced'),expression:\"status === 'advanced'\"}],staticClass:\"advanced\"},[_c('p',{staticClass:\"title\"},[_c('span',[_vm._v(\"全部\")]),_c('el-button',{staticClass:\"el-button-base\",attrs:{\"size\":\"mini\",\"round\":\"\"},on:{\"click\":function($event){_vm.status = 'base'}}},[_c('i',{staticClass:\"el-icon-arrow-left\"}),_c('span',[_vm._v(\"常用\")])])],1),_c('el-collapse',{attrs:{\"accordion\":\"\"},model:{value:(_vm.activeNames),callback:function ($$v) {_vm.activeNames=$$v},expression:\"activeNames\"}},_vm._l((_vm.data),function(item){return _c('el-collapse-item',{key:item.name,attrs:{\"title\":item.name,\"name\":item.name}},[_c('el-form',{staticClass:\"colla-content\",attrs:{\"label-position\":\"top\",\"label-width\":\"80px\"}},_vm._l((item.attributes),function(attr,index){return _c('div',{key:index,staticClass:\"property-item\"},[(!attr.hide)?_c('el-form-item',[_c('span',{staticClass:\"property-item-name\",attrs:{\"slot\":\"label\"},slot:\"label\"},[_vm._v(\" \"+_vm._s(attr.name)+\" \"),(attr.desc)?_c('DsfIcon',{staticStyle:{\"margin-left\":\"5px\",\"cursor\":\"pointer\"},attrs:{\"name\":\"bangzhuzhongxin\"},on:{\"click\":function($event){return _vm.showHelp(attr)}}}):_vm._e(),_c('el-dialog',{attrs:{\"visible\":attr.showHeplerMark,\"title\":attr.name,\"append-to-body\":true,\"width\":'500px'},on:{\"update:visible\":function($event){return _vm.$set(attr, \"showHeplerMark\", $event)}}},[_c('div',{staticStyle:{\"max-height\":\"500px\",\"min-height\":\"300px\",\"overflow\":\"auto\"}},[_c('span',{staticStyle:{\"display\":\"inline-block\",\"line-height\":\"1.5em\"},domProps:{\"innerHTML\":_vm._s(attr.desc)}})])])],1),(attr.nodeType === 'flow' && attr.nodeName2 === 'Version')?_c('div',{staticClass:\"inline\"},[_c('el-input-number',{attrs:{\"controls-position\":\"right\",\"disabled\":_vm.subIsDisabled,\"min\":_vm.minValue(attr, 0)},on:{\"input\":function($event){return _vm.changeVesion(attr, 0)}},model:{value:(attr.value0),callback:function ($$v) {_vm.$set(attr, \"value0\", $$v)},expression:\"attr.value0\"}}),_c('span',[_vm._v(\".\")]),_c('el-input-number',{attrs:{\"controls-position\":\"right\",\"disabled\":_vm.subIsDisabled,\"min\":_vm.minValue(attr, 1)},on:{\"input\":function($event){return _vm.changeVesion(attr, 1)}},model:{value:(attr.value1),callback:function ($$v) {_vm.$set(attr, \"value1\", $$v)},expression:\"attr.value1\"}}),_c('span',[_vm._v(\".\")]),_c('el-input',{attrs:{\"disabled\":\"disabled\"},model:{value:(attr.value2),callback:function ($$v) {_vm.$set(attr, \"value2\", $$v)},expression:\"attr.value2\"}})],1):_vm._e(),(attr.unit)?_c('div',{staticClass:\"inline\"},[_c('el-input-number',{attrs:{\"controls-position\":\"right\",\"disabled\":_vm.subIsDisabled,\"min\":1,\"max\":attr.max},on:{\"input\":function($event){return _vm.changeProperty(attr)}},model:{value:(attr.value),callback:function ($$v) {_vm.$set(attr, \"value\", $$v)},expression:\"attr.value\"}}),_c('span',{staticClass:\"unit\"},[_vm._v(_vm._s(attr.unit))])],1):_vm._e(),(_vm.show(attr))?_c('el-input',{attrs:{\"disabled\":_vm.subIsDisabled || !attr.editor},on:{\"input\":function($event){return _vm.changeProperty(attr)}},model:{value:(attr.value),callback:function ($$v) {_vm.$set(attr, \"value\", $$v)},expression:\"attr.value\"}}):_vm._e(),(attr.editor === 'textarea')?_c('el-input',{attrs:{\"disabled\":_vm.subIsDisabled,\"type\":\"textarea\",\"placeholder\":\"请输入内容\"},on:{\"input\":function($event){return _vm.changeProperty(attr)}},model:{value:(attr.value),callback:function ($$v) {_vm.$set(attr, \"value\", $$v)},expression:\"attr.value\"}}):_vm._e(),(attr.editor && attr.editor.type === 'combobox')?_c('el-select',{attrs:{\"name\":(\"\" + (attr.nodeName1 + '_' + attr.nodeName2)),\"disabled\":_vm.subIsDisabled},on:{\"change\":function($event){return _vm.changeProperty(attr)}},model:{value:(attr.value),callback:function ($$v) {_vm.$set(attr, \"value\", $$v)},expression:\"attr.value\"}},_vm._l((attr.editor.options.data),function(option,i){return _c('el-option',{key:i,attrs:{\"label\":option.text,\"value\":option.value}})}),1):_vm._e(),(attr.editor && attr.editor.type === 'radio')?_c('el-radio-group',{attrs:{\"disabled\":_vm.subIsDisabled},on:{\"change\":function($event){return _vm.changeProperty(attr)}},model:{value:(attr.value),callback:function ($$v) {_vm.$set(attr, \"value\", $$v)},expression:\"attr.value\"}},_vm._l((attr.editor.options.data),function(option,$index){return _c('el-radio',{key:$index,attrs:{\"label\":option.value}},[_vm._v(\" \"+_vm._s(option.text)+\" \")])}),1):_vm._e(),(attr.editor && attr.editor.type === 'checkbox')?_c('el-checkbox-group',{attrs:{\"disabled\":_vm.subIsDisabled},on:{\"change\":function($event){return _vm.changeProperty(attr)}},model:{value:(attr.value),callback:function ($$v) {_vm.$set(attr, \"value\", $$v)},expression:\"attr.value\"}},_vm._l((attr.editor.options.data),function(option,$index){return _c('el-checkbox',{key:$index,attrs:{\"label\":option.value}},[_vm._v(\" \"+_vm._s(option.text)+\" \")])}),1):_vm._e(),(attr.type === 'dialog')?_c('DsfButton',{class:attr.class,attrs:{\"type\":\"plain\",\"icon\":\"shezhi\"},on:{\"click\":function($event){return _vm.doOpenDialog(attr)}}},[_vm._v(\" \"+_vm._s(_vm.subIsDisabled ? \"查看\" : \"设置\")+\" \")]):_vm._e()],1):_vm._e()],1)}),0)],1)}),1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"ds_attr_root\">\r\n    <div v-show=\"status === 'base'\" class=\"base\">\r\n      <p class=\"title\">\r\n        <span>常用</span>\r\n        <el-button class=\"el-button-all\" size=\"mini\" round @click=\"status = 'advanced'\">\r\n          <span>全部</span>\r\n          <i class=\"el-icon-arrow-right\"></i>\r\n        </el-button>\r\n      </p>\r\n      <div class=\"el-collapse-item__content\">\r\n        <el-form v-for=\"(item, itemIndex) in data\" :key=\"itemIndex\" class=\"colla-content\" label-position=\"top\" label-width=\"80px\">\r\n          <div v-for=\"(attr, index) in item.attributes\" :key=\"index\" class=\"property-item\">\r\n            <el-form-item v-if=\"!attr.hide && attr.isBase\">\r\n              <span slot=\"label\" class=\"property-item-name\">\r\n                {{ attr.name }}\r\n                <DsfIcon v-if=\"attr.desc\" style=\"margin-left: 5px; cursor: pointer;\" name=\"bangzhuzhongxin\" @click=\"showHelp(attr)\"></DsfIcon>\r\n                <el-dialog :visible.sync=\"attr.showHeplerMark\" :title=\"attr.name\" :append-to-body=\"true\" :width=\"'500px'\">\r\n                  <div style=\"max-height: 500px; min-height: 300px; overflow: auto;\">\r\n                    <span style=\"display: inline-block; line-height: 1.5em;\" v-html=\"attr.desc\"></span>\r\n                  </div>\r\n                </el-dialog>\r\n              </span>\r\n              <div v-if=\"attr.nodeType === 'flow' && attr.nodeName2 === 'Version'\" class=\"inline\">\r\n                <el-input-number\r\n                  v-model=\"attr.value0\"\r\n                  controls-position=\"right\"\r\n                  :disabled=\"subIsDisabled\"\r\n                  :min=\"minValue(attr, 0)\"\r\n                  @input=\"changeVesion(attr, 0)\"\r\n                ></el-input-number>\r\n                <span>.</span>\r\n                <el-input-number\r\n                  v-model=\"attr.value1\"\r\n                  controls-position=\"right\"\r\n                  :disabled=\"subIsDisabled\"\r\n                  :min=\"minValue(attr, 1)\"\r\n                  @input=\"changeVesion(attr, 1)\"\r\n                ></el-input-number>\r\n                <span>.</span>\r\n                <el-input v-model=\"attr.value2\" disabled=\"disabled\"></el-input>\r\n              </div>\r\n              <div v-if=\"attr.unit\" class=\"inline\">\r\n                <el-input-number\r\n                  v-model=\"attr.value\"\r\n                  controls-position=\"right\"\r\n                  :disabled=\"subIsDisabled\"\r\n                  :min=\"1\"\r\n                  :max=\"attr.max\"\r\n                  @input=\"changeProperty(attr)\"\r\n                ></el-input-number>\r\n                <span class=\"unit\">{{ attr.unit }}</span>\r\n              </div>\r\n              <el-input v-if=\"show(attr)\" v-model=\"attr.value\" :disabled=\"subIsDisabled || !attr.editor\" @input=\"changeProperty(attr)\"></el-input>\r\n              <el-input\r\n                v-if=\"attr.editor === 'textarea'\"\r\n                v-model=\"attr.value\"\r\n                :disabled=\"subIsDisabled\"\r\n                type=\"textarea\"\r\n                placeholder=\"请输入内容\"\r\n                @input=\"changeProperty(attr)\"\r\n              ></el-input>\r\n              <el-select\r\n                v-if=\"attr.editor && attr.editor.type === 'combobox'\"\r\n                v-model=\"attr.value\"\r\n                :name=\"`${attr.nodeName1 + '_' + attr.nodeName2}`\"\r\n                :disabled=\"subIsDisabled\"\r\n                @change=\"changeProperty(attr)\"\r\n              >\r\n                <el-option v-for=\"(option, i) in attr.editor.options.data\" :key=\"i\" :label=\"option.text\" :value=\"option.value\"></el-option>\r\n              </el-select>\r\n              <!--单选-->\r\n              <el-radio-group\r\n                v-if=\"attr.editor && attr.editor.type === 'radio'\"\r\n                v-model=\"attr.value\"\r\n                :disabled=\"subIsDisabled\"\r\n                @change=\"changeProperty(attr)\"\r\n              >\r\n                <el-radio v-for=\"(option, $index) in attr.editor.options.data\" :key=\"$index\" :label=\"option.value\">\r\n                  {{ option.text }}\r\n                </el-radio>\r\n              </el-radio-group>\r\n              <!--多选-->\r\n              <el-checkbox-group\r\n                v-if=\"attr.editor && attr.editor.type === 'checkbox'\"\r\n                v-model=\"attr.value\"\r\n                :disabled=\"subIsDisabled\"\r\n                @change=\"changeProperty(attr)\"\r\n              >\r\n                <el-checkbox v-for=\"(option, $index) in attr.editor.options.data\" :key=\"$index\" :label=\"option.value\">\r\n                  {{ option.text }}\r\n                </el-checkbox>\r\n              </el-checkbox-group>\r\n              <!--弹出框-->\r\n              <DsfButton v-if=\"attr.type === 'dialog'\" type=\"plain\" icon=\"shezhi\" :class=\"[attr.class]\" @click=\"doOpenDialog(attr)\">\r\n                {{ subIsDisabled ? \"查看\" : \"设置\" }}\r\n              </DsfButton>\r\n            </el-form-item>\r\n          </div>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n    <div v-show=\"status === 'advanced'\" class=\"advanced\">\r\n      <p class=\"title\">\r\n        <span>全部</span>\r\n        <el-button class=\"el-button-base\" size=\"mini\" round @click=\"status = 'base'\">\r\n          <i class=\"el-icon-arrow-left\"></i>\r\n          <span>常用</span>\r\n        </el-button>\r\n      </p>\r\n      <el-collapse v-model=\"activeNames\" accordion>\r\n        <el-collapse-item v-for=\"item in data\" :key=\"item.name\" :title=\"item.name\" :name=\"item.name\">\r\n          <el-form label-position=\"top\" label-width=\"80px\" class=\"colla-content\">\r\n            <div v-for=\"(attr, index) in item.attributes\" :key=\"index\" class=\"property-item\">\r\n              <el-form-item v-if=\"!attr.hide\">\r\n                <span slot=\"label\" class=\"property-item-name\">\r\n                  {{ attr.name }}\r\n                  <!-- <el-popover placement=\"bottom\" width=\"210\" trigger=\"click\" :content=\"attr.desc\">\r\n                    <i slot=\"reference\" class=\"el-icon-question\"></i>\r\n                  </el-popover>-->\r\n                  <DsfIcon v-if=\"attr.desc\" style=\"margin-left: 5px; cursor: pointer;\" name=\"bangzhuzhongxin\" @click=\"showHelp(attr)\"></DsfIcon>\r\n                  <el-dialog :visible.sync=\"attr.showHeplerMark\" :title=\"attr.name\" :append-to-body=\"true\" :width=\"'500px'\">\r\n                    <div style=\"max-height: 500px; min-height: 300px; overflow: auto;\">\r\n                      <span style=\"display: inline-block; line-height: 1.5em;\" v-html=\"attr.desc\"></span>\r\n                    </div>\r\n                  </el-dialog>\r\n                </span>\r\n                <div v-if=\"attr.nodeType === 'flow' && attr.nodeName2 === 'Version'\" class=\"inline\">\r\n                  <el-input-number\r\n                    v-model=\"attr.value0\"\r\n                    controls-position=\"right\"\r\n                    :disabled=\"subIsDisabled\"\r\n                    :min=\"minValue(attr, 0)\"\r\n                    @input=\"changeVesion(attr, 0)\"\r\n                  ></el-input-number>\r\n                  <span>.</span>\r\n                  <el-input-number\r\n                    v-model=\"attr.value1\"\r\n                    controls-position=\"right\"\r\n                    :disabled=\"subIsDisabled\"\r\n                    :min=\"minValue(attr, 1)\"\r\n                    @input=\"changeVesion(attr, 1)\"\r\n                  ></el-input-number>\r\n                  <span>.</span>\r\n                  <el-input v-model=\"attr.value2\" disabled=\"disabled\"></el-input>\r\n                </div>\r\n                <div v-if=\"attr.unit\" class=\"inline\">\r\n                  <el-input-number\r\n                    v-model=\"attr.value\"\r\n                    controls-position=\"right\"\r\n                    :disabled=\"subIsDisabled\"\r\n                    :min=\"1\"\r\n                    :max=\"attr.max\"\r\n                    @input=\"changeProperty(attr)\"\r\n                  ></el-input-number>\r\n                  <span class=\"unit\">{{ attr.unit }}</span>\r\n                </div>\r\n                <el-input v-if=\"show(attr)\" v-model=\"attr.value\" :disabled=\"subIsDisabled || !attr.editor\" @input=\"changeProperty(attr)\"></el-input>\r\n                <el-input\r\n                  v-if=\"attr.editor === 'textarea'\"\r\n                  v-model=\"attr.value\"\r\n                  :disabled=\"subIsDisabled\"\r\n                  type=\"textarea\"\r\n                  placeholder=\"请输入内容\"\r\n                  @input=\"changeProperty(attr)\"\r\n                ></el-input>\r\n                <el-select\r\n                  v-if=\"attr.editor && attr.editor.type === 'combobox'\"\r\n                  v-model=\"attr.value\"\r\n                  :name=\"`${attr.nodeName1 + '_' + attr.nodeName2}`\"\r\n                  :disabled=\"subIsDisabled\"\r\n                  @change=\"changeProperty(attr)\"\r\n                >\r\n                  <el-option v-for=\"(option, i) in attr.editor.options.data\" :key=\"i\" :label=\"option.text\" :value=\"option.value\"></el-option>\r\n                </el-select>\r\n                <!--单选-->\r\n                <el-radio-group\r\n                  v-if=\"attr.editor && attr.editor.type === 'radio'\"\r\n                  v-model=\"attr.value\"\r\n                  :disabled=\"subIsDisabled\"\r\n                  @change=\"changeProperty(attr)\"\r\n                >\r\n                  <el-radio v-for=\"(option, $index) in attr.editor.options.data\" :key=\"$index\" :label=\"option.value\">\r\n                    {{ option.text }}\r\n                  </el-radio>\r\n                </el-radio-group>\r\n                <!--多选-->\r\n                <el-checkbox-group\r\n                  v-if=\"attr.editor && attr.editor.type === 'checkbox'\"\r\n                  v-model=\"attr.value\"\r\n                  :disabled=\"subIsDisabled\"\r\n                  @change=\"changeProperty(attr)\"\r\n                >\r\n                  <el-checkbox v-for=\"(option, $index) in attr.editor.options.data\" :key=\"$index\" :label=\"option.value\">\r\n                    {{ option.text }}\r\n                  </el-checkbox>\r\n                </el-checkbox-group>\r\n                <!--弹出框-->\r\n                <DsfButton v-if=\"attr.type === 'dialog'\" type=\"plain\" icon=\"shezhi\" :class=\"attr.class\" @click=\"doOpenDialog(attr)\">\r\n                  {{ subIsDisabled ? \"查看\" : \"设置\" }}\r\n                </DsfButton>\r\n              </el-form-item>\r\n            </div>\r\n          </el-form>\r\n        </el-collapse-item>\r\n      </el-collapse>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { MessageBox, Message } from \"element-ui\";\r\nimport {\r\n  BaseInfoProperties,\r\n  NodeProperties,\r\n  UserTaskNodeProperties,\r\n  ChildTaskProperties,\r\n  StartNodeProperties,\r\n  endNodeProperties,\r\n  ScriptNodeProperties,\r\n  JumpNodeProperties,\r\n  LineProperties,\r\n  WebTaskProperties,\r\n  MessageTaskProperties,\r\n  JudgementNodeProperties,\r\n  CorridorProperties,\r\n  BoundaryEventProperties,\r\n  GetInlineTypeData,\r\n  GetIsSelected,\r\n} from \"./propertySource\";\r\nimport Line from \"./Line\";\r\nimport Lane from \"./Lane\";\r\nimport Node from \"./Node\";\r\nimport BoundaryEvent from \"./BoundaryEvent\";\r\nimport { getObjById, deepClone, verifySub } from \"./common\";\r\nimport DsfDesignerDialog from \"_platform/designer/propertyEditor/dsfDesignerDialog\";\r\n\r\nexport default {\r\n  name: \"FlowInfo\",\r\n  components: {\r\n    DsfDesignerDialog,\r\n  },\r\n  props: {\r\n    checked: {\r\n      type: Object,\r\n      default() {\r\n        return {};\r\n      },\r\n    },\r\n    flowInfo: {\r\n      type: Object,\r\n      default() {\r\n        return {};\r\n      },\r\n    },\r\n    nodes: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      },\r\n    },\r\n    lines: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      },\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      activeNames: [\"1\"],\r\n      curSelectObj: null,\r\n      curNodeObj: null,\r\n      curElement: null,\r\n      AppInfo: null,\r\n      data: [],\r\n      status: \"base\",\r\n      showHeplerMark: false,\r\n      subIsDisabled: false,\r\n    };\r\n  },\r\n  computed: {\r\n    minValue() {\r\n      return (attr, index) => {\r\n        if (index === 0) {\r\n          return Number(attr.oldValue.split(\".\")[0]);\r\n        }\r\n        if (attr.value0 > Number(attr.oldValue.split(\".\")[0]) && index === 1) {\r\n          return 0;\r\n        }\r\n        return Number(attr.oldValue.split(\".\")[1]);\r\n      };\r\n    },\r\n  },\r\n  watch: {\r\n    checked(ui) {\r\n      this.loadPropertyWindow(ui);\r\n      this.subIsDisabled = this.disabledSub();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.$bus.$on(\"updateNodeName\", (ui, bool) => {\r\n      if (!bool) {\r\n        this.loadPropertyWindow(ui);\r\n      }\r\n    });\r\n  },\r\n  methods: {\r\n    disabledSub() {\r\n      if (this.curSelectObj && this.curSelectObj.parentNodeId) {\r\n        const parentNode = getObjById(this.nodes, this.curSelectObj.parentNodeId);\r\n        return verifySub(parentNode);\r\n      }\r\n      return false;\r\n    },\r\n    show(attr) {\r\n      return (\r\n        (!attr.nodeType && attr.nodeName2 !== \"Version\" && !attr.editor && attr.type !== \"dialog\") ||\r\n        (!attr.unit && attr.editor === \"text\") ||\r\n        attr.editor === \"numberbox\"\r\n      );\r\n    },\r\n    loadPropertyWindow(obj) {\r\n      if (Object.keys(obj).length === 0) {\r\n        return;\r\n      }\r\n      this.curSelectObj = obj || null;\r\n      this.curNodeObj = !obj ? null : obj.attributes;\r\n      this.loadPropertyDom(obj ? this.setPropertyData(obj) : []);\r\n    },\r\n    showHelp(attr) {\r\n      this.$set(attr, \"showHeplerMark\", true);\r\n    },\r\n    setPropertyData(obj) {\r\n      var pro = null;\r\n      if (obj instanceof Node) {\r\n        if (obj.type == \"101\") {\r\n          pro = UserTaskNodeProperties();\r\n        } else if (obj.type == \"102\") {\r\n          pro = ChildTaskProperties();\r\n        } else if (obj.type == \"103\") {\r\n          const config = {\r\n            name: \"脚本任务\",\r\n            type: \"103\",\r\n            language: \"java\",\r\n          };\r\n          pro = ScriptNodeProperties(config);\r\n        } else if (obj.type === \"104\") {\r\n          pro = WebTaskProperties();\r\n        } else if (obj.type === \"105\") {\r\n          pro = MessageTaskProperties();\r\n        } else if (obj.type === \"106\") {\r\n          const config = {\r\n            name: \"python任务\",\r\n            type: \"106\",\r\n            language: \"python\",\r\n          };\r\n          pro = ScriptNodeProperties(config);\r\n        } else if (obj.type === \"107\") {\r\n          const config = {\r\n            name: \"shell任务\",\r\n            type: \"107\",\r\n            language: \"shell\",\r\n          };\r\n          pro = ScriptNodeProperties(config);\r\n        } else if (obj.type === \"108\") {\r\n          const config = {\r\n            name: \"SQL任务\",\r\n            type: \"108\",\r\n            language: \"SQL\",\r\n          };\r\n          pro = ScriptNodeProperties(config);\r\n        } else if (obj.type == \"201\") {\r\n          pro = StartNodeProperties();\r\n        } else if (obj.type == \"299\") {\r\n          pro = endNodeProperties();\r\n        } else if (obj.type == \"301\") {\r\n          pro = JudgementNodeProperties();\r\n        } else if (obj.type == \"302\") {\r\n          pro = JumpNodeProperties();\r\n        } else {\r\n          pro = NodeProperties();\r\n        }\r\n      } else if (obj instanceof Line) {\r\n        pro = LineProperties();\r\n      } else if (obj instanceof Lane) {\r\n        pro = CorridorProperties();\r\n      } else if (obj instanceof BoundaryEvent) {\r\n        pro = BoundaryEventProperties();\r\n      } else {\r\n        // 基本流\r\n        pro = BaseInfoProperties();\r\n      }\r\n      var attr = obj.attributes;\r\n      // 转成平台要的样子\r\n      var group = null;\r\n      var groupIndex = -1;\r\n      pro.json = [];\r\n      for (let i = 0; i < pro.rows.length; i++) {\r\n        if (pro.rows[i].nodeLevel == 1) {\r\n          // 类似文本框\r\n          pro.rows[i].value = attr[pro.rows[i].nodeName];\r\n        } else if (pro.rows[i].nodeLevel == 2) {\r\n          // 期限类型-会根据流程信息去取值\r\n          if (attr[pro.rows[i].nodeName1]) {\r\n            pro.rows[i].value = attr[pro.rows[i].nodeName1][pro.rows[i].nodeName2];\r\n          } else {\r\n            pro.rows[i].value = \"\";\r\n          }\r\n        } else if (pro.rows[i].nodeLevel == 3) {\r\n          // 应用名称应用信息 - 初步认为是只读\r\n          if (attr[pro.rows[i].nodeName1] && attr[pro.rows[i].nodeName1][pro.rows[i].nodeName2]) {\r\n            pro.rows[i].value = attr[pro.rows[i].nodeName1][pro.rows[i].nodeName2][pro.rows[i].nodeName3];\r\n          } else {\r\n            pro.rows[i].value = \"\";\r\n          }\r\n        }\r\n        if (pro.rows[i].group != group) {\r\n          groupIndex++;\r\n          group = pro.rows[i].group;\r\n          pro.json[groupIndex] = {\r\n            name: group,\r\n            attributes: [],\r\n          };\r\n        }\r\n        pro.json[groupIndex][\"attributes\"].push(pro.rows[i]);\r\n      }\r\n      return pro.json;\r\n    },\r\n    loadPropertyDom(data) {\r\n      let rows = [];\r\n      data.forEach((item) => {\r\n        item.attributes.forEach((attr) => {\r\n          if (attr.editor && attr.editor.type === \"checkbox\") {\r\n            attr.value = attr.value || [];\r\n          } else if (attr.editor && attr.editor.type !== \"checkbox\") {\r\n            attr.value = attr.editor && attr.editor.options && attr.value ? Number(attr.value) : attr.value;\r\n          } else if (attr.nodeType === \"flow\" && attr.nodeName2 === \"Version\") {\r\n            // 工作流版本\r\n            attr.oldValue = attr.value;\r\n            attr.value0 = attr.value.split(\".\")[0];\r\n            attr.value1 = attr.value.split(\".\")[1];\r\n            attr.value2 = attr.value.split(\".\")[2];\r\n          } else {\r\n            attr.value = attr.value;\r\n          }\r\n\r\n          if (attr.showRob) {\r\n            rows.push(attr);\r\n          }\r\n        });\r\n      });\r\n      this.data = data;\r\n\r\n      // 加载处理模式 抢办人数/比例  连线汇总信息\r\n      if (rows && rows.length > 0) {\r\n        rows.forEach((row) => {\r\n          this.showRob(row);\r\n        });\r\n      }\r\n      this.activeNames = [this.data[0].name];\r\n    },\r\n    changeVesion(attr, index) {\r\n      if (attr) {\r\n        if (index === 0) {\r\n          attr.value1 = 0;\r\n          attr.value2 = \"0001\";\r\n        }\r\n        attr.value = attr.value0 + \".\" + attr.value1 + \".\" + attr.value2;\r\n        this.changeProperty(attr);\r\n      }\r\n    },\r\n    changeProperty(rowData) {\r\n      if (rowData.nodeName2 && rowData.nodeName2 == \"Name\") {\r\n        if (this.curSelectObj instanceof Node) {\r\n          this.curSelectObj.name = rowData.value;\r\n          // this.$bus.$emit(\"updateName\", this.curSelectObj);\r\n          this.$bus.$emit(`updateNodeName${this.isSub ? this.parentNode.id : \"\"}`, this.curSelectObj, true);\r\n        }\r\n        if (this.curSelectObj instanceof Lane) {\r\n          this.curSelectObj.name = rowData.value;\r\n        }\r\n        if (this.curSelectObj instanceof Line) {\r\n          this.curSelectObj.name = rowData.value;\r\n        }\r\n      }\r\n      if (rowData.showRob && rowData.showRob == \"GatherRule\") {\r\n        // 线 连线类型变化\r\n        if (this.curSelectObj instanceof Line) {\r\n          this.curSelectObj.type = rowData.value;\r\n        }\r\n      }\r\n      if (rowData.nodeName1 === \"InLine\" && rowData.nodeName2 === \"Type\") {\r\n        let name = GetInlineTypeData(rowData.value);\r\n        let RangeRule = [];\r\n        const Rule = this.curNodeObj.InLine.RangeRule && this.curNodeObj.InLine.RangeRule.Rule;\r\n        if (Rule && Rule.length > 0) {\r\n          Rule.forEach((item, index) => {\r\n            RangeRule.push(item.name + \"/\" + GetIsSelected(item.IsSelected));\r\n          });\r\n          this.curSelectObj.taskMsg = `${name}: ${RangeRule.join(\",\")}`;\r\n        }\r\n      }\r\n      if (\r\n        rowData.nodeName1 === \"InLine\" &&\r\n        rowData.nodeName2 === \"RangeRule\" &&\r\n        rowData.value &&\r\n        rowData.value.Rule &&\r\n        rowData.value.Rule.length > 0\r\n      ) {\r\n        let name = GetInlineTypeData(this.curNodeObj.InLine.Type);\r\n        let RangeRule = [];\r\n        rowData.value.Rule.forEach((item, index) => {\r\n          RangeRule.push(item.name + \"/\" + GetIsSelected(item.IsSelected));\r\n        });\r\n\r\n        this.curSelectObj.taskMsg = `${name}: ${RangeRule.join(\",\")}`;\r\n      }\r\n      // 处理模式为抢办 需要单独处理\r\n      this.showRob(rowData);\r\n      if (rowData.nodeLevel == 1) {\r\n        this.curNodeObj[rowData.nodeName] = rowData.value;\r\n      } else if (rowData.nodeLevel == 2) {\r\n        this.curNodeObj[rowData.nodeName1][rowData.nodeName2] = rowData.value;\r\n      } else if (rowData.nodeLevel == 3) {\r\n        this.curNodeObj[rowData.nodeName1][rowData.nodeName2][rowData.nodeName3] = rowData.value;\r\n      }\r\n    },\r\n    showRob(rowData) {\r\n      if (rowData.showRob) {\r\n        this.data.forEach((item) => {\r\n          item.attributes.forEach((attr) => {\r\n            const showRob = rowData.showRob.split(\",\");\r\n            showRob.forEach((field) => {\r\n              if (attr.nodeName2 === field || attr.nodeName3 === field) {\r\n                if (field === \"RushInfo\") {\r\n                  if (rowData.value === 5) {\r\n                    //修改默认值\r\n                    Object.assign(attr, {\r\n                      name: \"人数\",\r\n                      value: 1,\r\n                      max: 999999,\r\n                      unit: \"（人）\",\r\n                      hide: false,\r\n                    });\r\n                  } else if (rowData.value === 6) {\r\n                    //修改默认值\r\n                    Object.assign(attr, {\r\n                      name: \"比例\",\r\n                      value: 60,\r\n                      max: 100,\r\n                      unit: \"%\",\r\n                      hide: false,\r\n                    });\r\n                  } else {\r\n                    attr.hide = true;\r\n                  }\r\n                } else if (field === \"GatherRule\") {\r\n                  if (rowData.value === 1 || rowData.value === 2) {\r\n                    attr.hide = false;\r\n                  } else {\r\n                    attr.hide = true;\r\n                  }\r\n                } else if (field === \"Params\") {\r\n                  if (rowData.value === 0 || rowData.value === 1) {\r\n                    attr.hide = false;\r\n                  } else {\r\n                    attr.hide = true;\r\n                  }\r\n                } else if (field === \"Content\") {\r\n                  if (rowData.value === 2) {\r\n                    attr.hide = false;\r\n                  } else {\r\n                    attr.hide = true;\r\n                  }\r\n                } else if (field === \"Value\") {\r\n                  if (rowData.value !== 0) {\r\n                    attr.hide = false;\r\n                  } else {\r\n                    attr.hide = true;\r\n                  }\r\n                } else if (field === \"IsEnbled\") {\r\n                  if (rowData.value && this.curSelectObj.attributes.BaseInfo && this.curSelectObj.attributes.BaseInfo.Mode === 0) {\r\n                    attr.hide = false;\r\n                  } else {\r\n                    attr.hide = true;\r\n                  }\r\n                } else if (field === \"OpinionNodeID\") {\r\n                  const BaseInfo = this.curSelectObj.attributes.BaseInfo;\r\n                  setTimeout(() => {\r\n                    if (BaseInfo.Mode === 0 && BaseInfo.SubWFID && BaseInfo.Merge.IsEnbled === 1) {\r\n                      attr.hide = false;\r\n                    } else {\r\n                      attr.hide = true;\r\n                    }\r\n                  }, 0);\r\n                }\r\n              }\r\n            });\r\n          });\r\n        });\r\n      }\r\n    },\r\n    doOpenDialog(rowData) {\r\n      let data = rowData;\r\n      let params = {\r\n        code: (data.value && data.value.Expression) || \"\",\r\n        language: \"java\",\r\n        checked: this.checked,\r\n        value: data.value,\r\n      };\r\n      if (data.config && data.config.content) {\r\n        if (data.config.content === \"RangeRule\") {\r\n          params.nodes = this.nodes;\r\n          params.value = data.value || {};\r\n        } else if (data.config.content === \"Summary\") {\r\n          params.lines = this.lines;\r\n          params.value = data.value || {};\r\n        } else if (data.config.content === \"SendCondition\") {\r\n          params.lines = this.lines;\r\n          params.value = data.value || {};\r\n        } else if (data.config.content === \"EventSetting\") {\r\n          params.isEvent = true;\r\n        } else if (data.config.content === \"SetSubFlow\") {\r\n          params.mode = this.curSelectObj.attributes.BaseInfo.Mode;\r\n        } else if (data.config.content === \"SetOpinionNode\") {\r\n          params.subNodes = this.curSelectObj.nodes;\r\n        }\r\n      }\r\n      dsf.layer.pc.openDialog({\r\n        title: data.name,\r\n        width: data.config.width,\r\n        height: data.config.height,\r\n        overflow: \"hidden\",\r\n        content: data.config.content,\r\n        params: params,\r\n        btns: [\r\n          {\r\n            class: this.subIsDisabled ? \"hide\" : \"\",\r\n            text: \"确定\",\r\n            handler: (component) => {\r\n              // 选择子流程 子流程单独处理\r\n              if (data.config.content === \"SetSubFlow\") {\r\n                if (component.validate()) {\r\n                  const checked = component.yes();\r\n                  data.value = checked.SubWFID;\r\n                  this.curSelectObj.attributes.BaseInfo.Mode = checked.Mode;\r\n                  this.curSelectObj.attributes.BaseInfo.SubWFName = checked.SubWFName;\r\n                  this.curSelectObj.attributes.BaseInfo.OpinionNodeID = null;\r\n                  this.curSelectObj.attributes.BaseInfo.OpinionNodeName = null;\r\n                  if (!checked.SubWFID) {\r\n                    this.$bus.$emit(\"initSubNode\", this.curSelectObj, []);\r\n                    return true;\r\n                  }\r\n                  return this.$http\r\n                    .get(\"wfm/getWFDefinition\", {\r\n                      sID: checked.SubWFID,\r\n                    })\r\n                    .then((res) => {\r\n                      this.changeProperty(data);\r\n                      this.$bus.$emit(\"initSubNode\", this.curSelectObj, (res.data.data.WorkFlow && res.data.data.WorkFlow.ElementList) || []);\r\n                      return true;\r\n                    })\r\n                    .catch((error) => {});\r\n                }\r\n                return false;\r\n              } else if (data.config.content === \"SetOpinionNode\") {\r\n                const checked = component.yes();\r\n                data.value = checked.id;\r\n                this.curSelectObj.attributes.BaseInfo.OpinionNodeName = checked.name;\r\n                this.changeProperty(data);\r\n              } else {\r\n                data.value = component.getContent();\r\n                this.changeProperty(data);\r\n              }\r\n            },\r\n          },\r\n          {\r\n            text: \"取消\",\r\n          },\r\n        ],\r\n      });\r\n      if (data.config.content === \"SetSubFlow\" && !data.value) {\r\n        dsf.layer.message(\"请慎重操作，选择子流程任务后，将自动获取子流程任务，覆盖子流程\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.inline {\r\n  display: flex;\r\n  /deep/ .el-input__inner {\r\n    text-align: center;\r\n    padding: 0;\r\n  }\r\n  .el-input-number {\r\n    width: 300px;\r\n    /deep/ .el-input-number__decrease,\r\n    /deep/ .el-input-number__increase {\r\n      width: 20px;\r\n    }\r\n    /deep/ .el-input__inner {\r\n      padding-right: 16px;\r\n    }\r\n  }\r\n\r\n  .el-input-number.is-controls-right .el-input__inner {\r\n    padding-right: 34px;\r\n  }\r\n  .unit {\r\n    display: inline-block;\r\n    width: 42px;\r\n    text-align: center;\r\n  }\r\n}\r\n.title {\r\n  height: 50px;\r\n  line-height: 50px;\r\n  text-align: center;\r\n  position: relative;\r\n  .el-button {\r\n    position: absolute;\r\n    top: 12px;\r\n    padding: 7px 10px;\r\n    &.el-button-all {\r\n      right: 5px;\r\n    }\r\n    &.el-button-base {\r\n      left: 5px;\r\n    }\r\n  }\r\n}\r\n.el-select {\r\n  width: 100%;\r\n}\r\n/deep/ .el-checkbox {\r\n  margin-right: 12px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./flowInfo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./flowInfo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./flowInfo.vue?vue&type=template&id=0b6c4c1a&scoped=true&\"\nimport script from \"./flowInfo.vue?vue&type=script&lang=js&\"\nexport * from \"./flowInfo.vue?vue&type=script&lang=js&\"\nimport style0 from \"./flowInfo.vue?vue&type=style&index=0&id=0b6c4c1a&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0b6c4c1a\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"svgRoot\",staticClass:\"svgRoot\"},[_c('lines',{ref:\"lines\",attrs:{\"is-draw-line\":_vm.isDrawLine,\"lines\":_vm.lines,\"nodes\":_vm.nodes,\"events\":_vm.events,\"checked\":_vm.checked,\"config\":_vm.config}}),_c('nodes',{attrs:{\"is-draw-line\":_vm.isDrawLine,\"nodes\":_vm.nodes,\"checked\":_vm.checked,\"config\":_vm.config}}),_c('events',{attrs:{\"is-draw-line\":_vm.isDrawLine,\"nodes\":_vm.nodes,\"events\":_vm.events,\"checked\":_vm.checked,\"config\":_vm.config}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div ref=\"svgRoot\" class=\"svgRoot\">\r\n    <lines\r\n      ref=\"lines\"\r\n      :is-draw-line=\"isDrawLine\"\r\n      :lines=\"lines\"\r\n      :nodes=\"nodes\"\r\n      :events=\"events\"\r\n      :checked=\"checked\"\r\n      :config=\"config\"\r\n    ></lines>\r\n    <nodes\r\n      :is-draw-line=\"isDrawLine\"\r\n      :nodes=\"nodes\"\r\n      :checked=\"checked\"\r\n      :config=\"config\"\r\n    ></nodes>\r\n    <events\r\n      :is-draw-line=\"isDrawLine\"\r\n      :nodes=\"nodes\"\r\n      :events=\"events\"\r\n      :checked=\"checked\"\r\n      :config=\"config\"\r\n    ></events>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Lines from \"./Lines\";\r\nimport Events from \"./Events\";\r\nimport subprocess from \"./Subprocess\";\r\nimport { getAttributes } from \"./common\";\r\nimport { BaseInfoProperties } from \"./propertySource\";\r\nexport default {\r\n  name: \"FlowContent\",\r\n  components: {\r\n    Lines,\r\n    Events,\r\n    subprocess,\r\n  },\r\n  props: {\r\n    flowInfo: {\r\n      type: Object,\r\n      default() {\r\n        return {};\r\n      },\r\n    },\r\n    lines: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      },\r\n    },\r\n    nodes: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      },\r\n    },\r\n    lanes: {\r\n      type: Object,\r\n      default() {\r\n        return {};\r\n      },\r\n    },\r\n    events: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      },\r\n    },\r\n    isDrawLine: {\r\n      type: Boolean,\r\n      default() {\r\n        return false;\r\n      },\r\n    },\r\n    checked: {\r\n      type: Object,\r\n      default() {\r\n        return {};\r\n      },\r\n    },\r\n    config: {\r\n      type: Object,\r\n      default() {\r\n        return {};\r\n      },\r\n    },\r\n  },\r\n  data() {\r\n    return {};\r\n  },\r\n  watch: {\r\n    flowInfo(val) {\r\n      if (val) {\r\n        this.init();\r\n      }\r\n    },\r\n  },\r\n  created() {},\r\n  mounted() {},\r\n  methods: {\r\n    init() {\r\n      this.initFlow();\r\n    },\r\n    initFlow() {\r\n      //流程插件初始化\r\n      flow = {\r\n        attributes: Object.assign(\r\n          getAttributes(BaseInfoProperties()),\r\n          this.flowInfo\r\n        ),\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n// @import \"_platform/assets/styles/designer/workFlow.scss\";\r\n</style>\r\n","import mod from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./flowContent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./flowContent.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./flowContent.vue?vue&type=template&id=7a238028&\"\nimport script from \"./flowContent.vue?vue&type=script&lang=js&\"\nexport * from \"./flowContent.vue?vue&type=script&lang=js&\"\nimport style0 from \"./flowContent.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"lanes\"},_vm._l((_vm.lanes),function(lane,index){return _c('div',{key:lane.id || index,staticClass:\"lane\",class:{ selected: _vm.checked === lane },style:({\n      left: _vm.toPx(lane.left),\n      top: _vm.toPx(lane.top),\n      width: lane.direction === 'vertical' ? _vm.toPx(lane.size) : '',\n      height: lane.direction === 'horizontal' ? _vm.toPx(lane.size) : '',\n    }),attrs:{\"index\":index},on:{\"click\":function($event){return _vm.selectLane($event, lane)}}},[_c('div',{staticClass:\"head\"},[_c('div',{staticClass:\"title\"},[_c('el-popover',{attrs:{\"placement\":lane.direction === 'vertical' ? 'bottom' : 'right',\"title\":\"修改名称\",\"width\":\"200\",\"trigger\":\"manual\"},model:{value:(lane.isEdit),callback:function ($$v) {_vm.$set(lane, \"isEdit\", $$v)},expression:\"lane.isEdit\"}},[_c('div',{staticClass:\"el-input\"},[(lane.isEdit)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(lane.name),expression:\"lane.name\"},{name:\"focus\",rawName:\"v-focus\"}],staticClass:\"el-input__inner\",attrs:{\"autofocus\":\"\",\"type\":\"text\",\"placeholder\":\"请输入内容\"},domProps:{\"value\":(lane.name)},on:{\"change\":function($event){lane.attributes.Name = lane.name;\n                _vm.hideEdit();},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(lane, \"name\", $event.target.value)}}}):_vm._e()]),_c('span',{staticClass:\"textContent ellipsis\",style:({\n              width: _vm.toPx(lane.size),\n              transform: lane.direction === 'horizontal' ? (\"rotate(-90deg) translateX(-\" + (lane.size) + \"px)\") : '',\n            }),attrs:{\"slot\":\"reference\"},on:{\"dblclick\":function($event){return _vm.edit(lane)}},slot:\"reference\"},[_vm._v(\" \"+_vm._s(lane.name)+\" \")])]),_c('img',{staticClass:\"plus left\",attrs:{\"src\":require('_platform/assets/styles/themes/workFlow/addLane.png')},on:{\"click\":function($event){return _vm.addLane(lane.direction, index)}}}),_c('img',{staticClass:\"plus right\",attrs:{\"src\":require('_platform/assets/styles/themes/workFlow/addLane.png')},on:{\"click\":function($event){return _vm.addLane(lane.direction, index + 1)}}}),_c('span',{staticClass:\"resizeLane\",on:{\"mousedown\":function($event){return _vm.dragLane($event, lane)}}})],1)]),_c('div',{staticClass:\"bg/\"}),_c('div',{staticClass:\"laneSelected\"})])}),0)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"lanes\">\r\n    <div\r\n      v-for=\"(lane, index) in lanes\"\r\n      :key=\"lane.id || index\"\r\n      :index=\"index\"\r\n      :style=\"{\r\n        left: toPx(lane.left),\r\n        top: toPx(lane.top),\r\n        width: lane.direction === 'vertical' ? toPx(lane.size) : '',\r\n        height: lane.direction === 'horizontal' ? toPx(lane.size) : '',\r\n      }\"\r\n      :class=\"{ selected: checked === lane }\"\r\n      class=\"lane\"\r\n      @click=\"selectLane($event, lane)\"\r\n    >\r\n      <div class=\"head\">\r\n        <div class=\"title\">\r\n          <el-popover\r\n            v-model=\"lane.isEdit\"\r\n            :placement=\"lane.direction === 'vertical' ? 'bottom' : 'right'\"\r\n            title=\"修改名称\"\r\n            width=\"200\"\r\n            trigger=\"manual\"\r\n          >\r\n            <div class=\"el-input\">\r\n              <input\r\n                v-if=\"lane.isEdit\"\r\n                v-model=\"lane.name\"\r\n                v-focus\r\n                autofocus\r\n                class=\"el-input__inner\"\r\n                type=\"text\"\r\n                placeholder=\"请输入内容\"\r\n                @change=\"\r\n                  lane.attributes.Name = lane.name;\r\n                  hideEdit();\r\n                \"\r\n              />\r\n            </div>\r\n            <span\r\n              slot=\"reference\"\r\n              class=\"textContent ellipsis\"\r\n              :style=\"{\r\n                width: toPx(lane.size),\r\n                transform: lane.direction === 'horizontal' ? `rotate(-90deg) translateX(-${lane.size}px)` : '',\r\n              }\"\r\n              @dblclick=\"edit(lane)\"\r\n            >\r\n              {{ lane.name }}\r\n            </span>\r\n          </el-popover>\r\n          <img class=\"plus left\" :src=\"require('_platform/assets/styles/themes/workFlow/addLane.png')\" @click=\"addLane(lane.direction, index)\" />\r\n          <img class=\"plus right\" :src=\"require('_platform/assets/styles/themes/workFlow/addLane.png')\" @click=\"addLane(lane.direction, index + 1)\" />\r\n          <span class=\"resizeLane\" @mousedown=\"dragLane($event, lane)\"></span>\r\n        </div>\r\n      </div>\r\n      <div class=\"bg/\"></div>\r\n      <div class=\"laneSelected\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n/* eslint-disable no-unused-vars */\r\nimport { LaneDirection } from \"./tools\";\r\n\r\nexport default {\r\n  name: \"Lanes\",\r\n  props: {\r\n    lanes: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      },\r\n    },\r\n    checked: {\r\n      type: Object,\r\n      default() {\r\n        return {};\r\n      },\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      current: null,\r\n      minSize: 100, // 最小的泳道宽度/高度\r\n    };\r\n  },\r\n  mounted() {\r\n    document.addEventListener(\"mousedown\", (e) => {\r\n      const target = e.target;\r\n      if (\r\n        target.getAttribute(\"role\") !== \"tooltip\" &&\r\n        target.parentElement.getAttribute(\"role\") !== \"tooltip\" &&\r\n        target.parentElement.parentElement.getAttribute(\"role\") !== \"tooltip\"\r\n      ) {\r\n        this.hideEdit();\r\n      }\r\n    });\r\n    document.addEventListener(\"mousemove\", (e) => {\r\n      this.moveLane(e);\r\n    });\r\n    document.addEventListener(\"mouseup\", (e) => {\r\n      this.dropLane(e);\r\n    });\r\n  },\r\n  methods: {\r\n    toPx(number) {\r\n      return `${number}px`;\r\n    },\r\n    selectLane(e, lane) {\r\n      this.$bus.$emit(\"update-checked\", lane);\r\n      e.stopPropagation();\r\n    },\r\n    addLane(direction, index) {\r\n      this.$emit(\"addLane\", direction, index);\r\n    },\r\n    dragLane(e, item) {\r\n      this.$bus.$emit(\"update-checked\", item);\r\n      this.current = { ...item };\r\n      this.$bus.$emit(\"update-baseLine\", {\r\n        show: this.current.direction,\r\n        top: 0,\r\n        left: 0,\r\n      });\r\n      // 鼠标点击的位置在整个页面上的坐标是（e.clientX，e.clientY）\r\n      // 鼠标点击的位置在图片的位置坐标为（X1，Y1）\r\n    },\r\n    dropLane(e) {\r\n      if (!this.current) {\r\n        return;\r\n      }\r\n      const page = this.$store.state.flow.page;\r\n      const svgRoot = this.$store.state.flow.svgRoot;\r\n      const scale = this.$store.state.flow.page.scale;\r\n      if (this.current.direction === LaneDirection.vertical) {\r\n        this.current.size = (e.pageX - this.current.left - page.left + svgRoot.scrollLeft) / scale;\r\n      } else {\r\n        this.current.size = (e.pageY - this.current.top - page.top + svgRoot.scrollTop) / scale;\r\n      }\r\n      this.current.size = this.current.size > this.minSize ? this.current.size : this.minSize;\r\n      // 根据鼠标点击的位置在整个页面上的坐标和在图片上的坐标来确定整个图片的坐标\r\n      this.$bus.$emit(\"update-baseLine\", {\r\n        showV: false,\r\n        showH: false,\r\n        top: 0,\r\n        left: 0,\r\n      });\r\n      this.$store.commit(\"flow/changeLane\", this.current);\r\n      this.$bus.$emit(\"resize\");\r\n      this.current = null;\r\n    },\r\n    moveLane(e) {\r\n      if (!this.current) {\r\n        return false;\r\n      }\r\n      let resize;\r\n      const page = this.$store.state.flow.page;\r\n      const svgRoot = this.$store.state.flow.svgRoot;\r\n      const scale = this.$store.state.flow.page.scale;\r\n      if (this.current.direction === LaneDirection.vertical) {\r\n        const minLeft = this.current.left + this.minSize;\r\n        const current = e.pageX - page.left + svgRoot.scrollLeft;\r\n        resize = {\r\n          top: 10,\r\n          left: (current > minLeft * scale ? current : minLeft * scale) / scale,\r\n        };\r\n      } else {\r\n        const minTop = this.current.top + this.minSize;\r\n        const current = e.pageY - page.top + svgRoot.scrollTop;\r\n        resize = {\r\n          top: (current > minTop * scale ? current * scale : minTop) / scale,\r\n          left: 10,\r\n        };\r\n      }\r\n      const baseLine = Object.assign(resize, {\r\n        showV: this.current.direction === \"vertical\",\r\n        showH: this.current.direction === \"horizontal\",\r\n      });\r\n      this.$bus.$emit(\"update-baseLine\", baseLine);\r\n      this.$bus.$emit(\"autoScroll\", {\r\n        type: \"lane\",\r\n        data: this.current,\r\n        mouse: {\r\n          x: e.pageX,\r\n          y: e.pageY,\r\n        },\r\n      });\r\n    },\r\n    edit(lane) {\r\n      this.lanes.forEach((item) => {\r\n        if (lane === item) {\r\n          item.isEdit = true;\r\n        } else {\r\n          item.isEdit = false;\r\n        }\r\n      });\r\n    },\r\n    hideEdit() {\r\n      this.lanes.forEach((item) => {\r\n        item.isEdit = false;\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.lanes {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\r\n","import mod from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./Lanes.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./Lanes.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Lanes.vue?vue&type=template&id=1e31fce0&scoped=true&\"\nimport script from \"./Lanes.vue?vue&type=script&lang=js&\"\nexport * from \"./Lanes.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Lanes.vue?vue&type=style&index=0&id=1e31fce0&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1e31fce0\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div id=\"desginer\" class=\"ds_workflow ds-designer\">\r\n    <!-- 按钮栏 -->\r\n    <div class=\"designer-head\">\r\n      <div class=\"desginer_tools\">\r\n        <a class=\"ds-button--icon-text\" @click=\"doSave\">\r\n          <i class=\"iconfont icon-baocun\"></i>\r\n          <span>保存</span>\r\n        </a>\r\n        <a class=\"ds-button--icon-text\">\r\n          <i class=\"iconfont icon-baocun\"></i>\r\n          <span>发布</span>\r\n        </a>\r\n        <a class=\"ds-button--icon-text\">\r\n          <i class=\"iconfont icon-iframetianjia\"></i>\r\n          <span>\r\n            版本\r\n            <i class=\"iconfont icon-xia1\"></i>\r\n          </span>\r\n          <dl class=\"layui-nav-child\">\r\n            <p class=\"label\">\r\n              <span>当前版本</span>\r\n            </p>\r\n            <p>\r\n              <span>2.0.11 2020-4-10 16：20： 10</span>\r\n            </p>\r\n            <p class=\"label\">\r\n              <span>历史版本</span>\r\n            </p>\r\n            <p>\r\n              <span>2.0.11 2020-4-10 16：20： 10</span>\r\n            </p>\r\n            <p>\r\n              <span>2.0.11 2020-4-10 16：20： 10</span>\r\n            </p>\r\n            <p>\r\n              <span>2.0.11 2020-4-10 16：20： 10</span>\r\n            </p>\r\n            <p>\r\n              <span>2.0.11 2020-4-10 16：20： 10</span>\r\n            </p>\r\n          </dl>\r\n        </a>\r\n        <a class=\"ds-button--icon-text\">\r\n          <i class=\"iconfont icon-shebeikaifa1\"></i>\r\n          <span>模板库</span>\r\n        </a>\r\n        <a class=\"ds-button--icon-text\">\r\n          <i class=\"iconfont icon-baocun\"></i>\r\n          <span>关闭</span>\r\n        </a>\r\n        <a class=\"ds-button--icon-text\" :class=\"{ selected: isDrawLine }\" @click=\"drawLine\">\r\n          <i class=\"iconfont icon-liujisuan\"></i>\r\n          <span>连线</span>\r\n        </a>\r\n        <a class=\"ds-button--icon-text\">\r\n          <i class=\"iconfont icon-iframetianjia\"></i>\r\n          <span>\r\n            泳道\r\n            <i class=\"iconfont icon-xia1\"></i>\r\n          </span>\r\n          <dl class=\"layui-nav-child\">\r\n            <dd @click=\"addLane('vertical')\">\r\n              <span>泳道(垂直)</span>\r\n            </dd>\r\n            <dd @click=\"addLane('horizontal')\">\r\n              <span>泳道(水平)</span>\r\n            </dd>\r\n          </dl>\r\n        </a>\r\n        <a class=\"ds-button--icon-text scale\">\r\n          <div class=\"scale-com\">\r\n            <i class=\"el-icon-minus\" :class=\"{ disabled: scale <= 0.4 }\" @click=\"rootScale('down')\"></i>\r\n            <span class=\"percent\">{{ Math.round(scale * 100) }}%</span>\r\n            <i class=\"el-icon-plus\" :class=\"{ disabled: scale >= 2 }\" @click=\"rootScale('up')\"></i>\r\n          </div>\r\n          <span>缩放</span>\r\n        </a>\r\n        <a class=\"ds-button--icon-text\">\r\n          <i class=\"iconfont icon-dakai\"></i>\r\n          <span>\r\n            组件\r\n            <i class=\"iconfont icon-xia1\"></i>\r\n          </span>\r\n          <dl class=\"layui-nav-child\">\r\n            <p @click=\"exportFlow()\">\r\n              <span>创建组</span>\r\n            </p>\r\n            <p class=\"label\" @click=\"saveAsFlow()\">\r\n              <span>保存为组件</span>\r\n            </p>\r\n            <p @click=\"openFlow()\">\r\n              <span>选择组</span>\r\n            </p>\r\n          </dl>\r\n        </a>\r\n        <a class=\"ds-button--icon-text\">\r\n          <i class=\"iconfont icon-lianjieliu\"></i>\r\n          <span>\r\n            更多\r\n            <i class=\"iconfont icon-xia1\"></i>\r\n          </span>\r\n          <dl class=\"layui-nav-child\">\r\n            <p class=\"title\">\r\n              <span>导出</span>\r\n            </p>\r\n            <p class=\"child\">DFR</p>\r\n            <p class=\"child\">BPMN2.0</p>\r\n            <p class=\"child\">XML</p>\r\n            <p class=\"label child\" @click=\"exportFlowJson()\">JSON</p>\r\n            <p class=\"title\">\r\n              <span>导入</span>\r\n            </p>\r\n            <p class=\"child\">DFR</p>\r\n            <p class=\"child\">BPMN2.0</p>\r\n            <p class=\"child\">XML</p>\r\n            <p class=\"label child\">JSON</p>\r\n            <p class=\"label\" @click=\"startTestFlow()\">\r\n              <span>仿真测试</span>\r\n            </p>\r\n            <p @click=\"monitorFlow()\">\r\n              <span>浏览监控</span>\r\n            </p>\r\n          </dl>\r\n        </a>\r\n        <a v-if=\"$store.state.flow.selectedList && $store.state.flow.selectedList.length > 1\" class=\"ds-button--icon-text\">\r\n          <i class=\"iconfont icon-lianjieliu\"></i>\r\n          <span>\r\n            对齐方式\r\n            <i class=\"iconfont icon-xia1\"></i>\r\n          </span>\r\n          <dl class=\"layui-nav-child\">\r\n            <dd @click=\"alignment('left')\">\r\n              <span>左对齐(L)</span>\r\n            </dd>\r\n            <dd @click=\"alignment('center')\">\r\n              <span>水平居中(C)</span>\r\n            </dd>\r\n            <dd @click=\"alignment('right')\">\r\n              <span>右对齐(R)</span>\r\n            </dd>\r\n            <dd @click=\"alignment('top')\">\r\n              <span>顶端对齐(T)</span>\r\n            </dd>\r\n            <dd @click=\"alignment('middle')\">\r\n              <span>垂直居中(M)</span>\r\n            </dd>\r\n            <dd @click=\"alignment('bottom')\">\r\n              <span>底端对齐(B)</span>\r\n            </dd>\r\n            <dd @click=\"alignment('horizontal')\">\r\n              <span>横向分布(H)</span>\r\n            </dd>\r\n            <dd @click=\"alignment('vertical')\">\r\n              <span>纵向分布(V)</span>\r\n            </dd>\r\n          </dl>\r\n        </a>\r\n      </div>\r\n    </div>\r\n    <!-- 中、左、右 -->\r\n    <div class=\"designer-content\">\r\n      <div class=\"designer-center\">\r\n        <div ref=\"ds_page\" class=\"ds_control ds_page layui-form leftRight_ design\" @scroll=\"onScroll($event)\">\r\n          <div\r\n            id=\"flow_box\"\r\n            ref=\"container\"\r\n            class=\"flow\"\r\n            :style=\"{\r\n              width: toPx(scale > 1 ? width * scale : width / scale),\r\n              height: toPx(scale > 1 ? height * scale : height / scale),\r\n              transform: `scale(${scale}) translateZ(0)`,\r\n              transformOrigin: 'left top',\r\n            }\"\r\n          >\r\n            <div\r\n              ref=\"root\"\r\n              :class=\"{\r\n                has_v_head: lanes && lanes.vertical.length > 0,\r\n                has_h_head: lanes && lanes.horizontal.length > 0,\r\n              }\"\r\n              :style=\"{\r\n                width: toPx(scale > 1 ? width * scale : width / scale),\r\n                height: toPx(scale > 1 ? height * scale : height / scale),\r\n              }\"\r\n              class=\"root\"\r\n            >\r\n              <span v-if=\"baseLine.showV\" :style=\"{ transform: `translate3d(${baseLine.left}px, 0, 0)` }\" class=\"baseLine_v\"></span>\r\n              <span v-if=\"baseLine.showH\" :style=\"{ transform: `translate3d(0, ${baseLine.top}px, 0)` }\" class=\"baseLine_h\"></span>\r\n              <flow-content\r\n                ref=\"flowContent\"\r\n                :flow-info=\"flowInfo\"\r\n                :is-draw-line=\"isDrawLine\"\r\n                :lines=\"lines\"\r\n                :nodes=\"nodes\"\r\n                :lanes=\"lanes\"\r\n                :events=\"events\"\r\n                :checked=\"checked\"\r\n                :config=\"config\"\r\n              ></flow-content>\r\n              <div ref=\"backLayout\" class=\"backgroundLayout\">\r\n                <div ref=\"v_lane\" class=\"v_lane\">\r\n                  <lanes :lanes=\"lanes && lanes.vertical\" :checked=\"checked\" @addLane=\"addLane\"></lanes>\r\n                </div>\r\n                <div ref=\"h_lane\" class=\"h_lane\">\r\n                  <lanes :lanes=\"lanes && lanes.horizontal\" :checked=\"checked\" @addLane=\"addLane\"></lanes>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"designer-left\" style=\"margin-top: 60px;\">\r\n        <div class=\"designer-left-tools\">\r\n          <el-collapse v-model=\"activeNames\" accordion>\r\n            <el-collapse-item v-for=\"(tool, index) in flowTools\" :key=\"index\" :title=\"tool.title\" :name=\"index\">\r\n              <div class=\"layui-colla-content layui-show\">\r\n                <div\r\n                  v-for=\"item in tool.data\"\r\n                  :key=\"item.type\"\r\n                  class=\"ds_tool_item nodeButton\"\r\n                  :title=\"item.name\"\r\n                  :sort=\"item.sort\"\r\n                  :nodetype=\"item.type\"\r\n                  draggable=\"true\"\r\n                  @dragstart=\"dragTool($event, item)\"\r\n                >\r\n                  <img :src=\"item.img\" draggable=\"false\" />\r\n                  {{ item.name }}\r\n                </div>\r\n                <div style=\"clear: both;\"></div>\r\n              </div>\r\n            </el-collapse-item>\r\n            <el-collapse-item title=\"边界事件\" name=\"5\">\r\n              <div class=\"layui-colla-content layui-show\">\r\n                <div v-for=\"event in boundaryEvents\" :key=\"event.type\" class=\"nodeButton ds_tool_event\" :title=\"event.name\" :nodetype=\"event.type\">\r\n                  <div class=\"tool_event_drag\" draggable=\"true\" @dragstart=\"dragBoundaryEvent($event, event)\">\r\n                    <img :src=\"event.url\" draggable=\"false\" />\r\n                  </div>\r\n                  <span>{{ event.name }}</span>\r\n                </div>\r\n              </div>\r\n            </el-collapse-item>\r\n          </el-collapse>\r\n        </div>\r\n      </div>\r\n      <div id=\"propertyBox\" class=\"designer-right\">\r\n        <flow-info :checked=\"checked\" :nodes=\"nodes\" :lines=\"lines\" :flow-info=\"flowInfo\"></flow-info>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-redeclare */\r\nwindow.flow = null;\r\nimport { mapState } from \"vuex\";\r\nimport FlowFun from \"./flow\";\r\nimport Node from \"./Node\";\r\nimport Lane from \"./Lane\";\r\nimport Line from \"./Line\";\r\nimport BoundaryEvent from \"./BoundaryEvent\";\r\nimport FlowInfo from \"./flowInfo\";\r\nimport FlowContent from \"./flowContent\";\r\nimport { getObjById, getObjByTarget, getObjByParentTarget, getObjectByTarget, getGridPoint, deepClone, toPx, verifySub } from \"./common\";\r\nimport { _LineType, LaneDirection, nodeSize, tools } from \"./tools\";\r\nimport Lanes from \"./Lanes\";\r\nimport {\r\n  NodeProperties,\r\n  LineProperties,\r\n  BaseInfoProperties,\r\n  CorridorProperties,\r\n  JudgementNodeProperties,\r\n  flowTools,\r\n  boundaryEvents,\r\n} from \"./propertySource\";\r\nimport { getNodeLinkPoints } from \"./getPoints\";\r\nimport \"jqueryui/jquery-ui.min.css\";\r\nimport \"jqueryui/jquery-ui.min.js\";\r\nexport default {\r\n  name: \"Flow\",\r\n  components: {\r\n    FlowInfo,\r\n    FlowContent,\r\n    Lanes,\r\n  },\r\n  data() {\r\n    return {\r\n      activeNames: [0],\r\n      isDrawLine: false,\r\n      dragNode: null,\r\n      dragEvent: null,\r\n      endTarget: null,\r\n      width: 0,\r\n      height: 0,\r\n      maxWidth: 0,\r\n      maxHeight: 0,\r\n      flow: null,\r\n      flowInfo: null,\r\n      config: null,\r\n      sID: (this.$route.query && this.$route.query.id) || \"5b2d48d830c44b509d4fa730fa9d0b9b\",\r\n      nodes: [],\r\n      lines: [],\r\n      events: [],\r\n      distance: 30, // 吸附距离\r\n      cloneObj: null,\r\n      crashNode: null,\r\n      scale: this.$store.state.flow.page.scale,\r\n      dragSize: 20,\r\n      maxSizeOffset: 50,\r\n      flowTools: flowTools,\r\n      boundaryEvents: boundaryEvents,\r\n      checked: null,\r\n      baseLine: {\r\n        show: \"\",\r\n        top: 0,\r\n        left: 0,\r\n      },\r\n      showLineV: false,\r\n      showLineH: false,\r\n      isGlobalPosMove: false,\r\n      globalPos: null,\r\n      globalMoveLastMouse: null,\r\n      globalRect: null,\r\n      isGlobalSelect: false,\r\n      selectGlobalPos: null,\r\n      selectGlobalPonits: {\r\n        start: { x: 0, y: 0 },\r\n        end: { x: 0, y: 0 },\r\n      },\r\n      globalSelect: null,\r\n      isCtrlKey: false,\r\n      ctrlCopyNodes: null,\r\n      isCopyNodes: false,\r\n      copyNodesPos: null,\r\n      copyNodes: [],\r\n      hasMoved: false,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      lanes: (state) => {\r\n        return state.flow.lanes;\r\n      },\r\n    }),\r\n  },\r\n  created() {},\r\n  mounted() {\r\n    this.reset();\r\n    this.init();\r\n    this.flow = this.$store.state.flow;\r\n  },\r\n  methods: {\r\n    toPx,\r\n    verifySub,\r\n    reset() {\r\n      const ds_page = this.$refs.ds_page;\r\n      this.$store.commit(\"flow/setPage\", {\r\n        width: ds_page.clientWidth,\r\n        height: ds_page.clientHeight,\r\n      });\r\n    },\r\n    async init() {\r\n      await this.initData();\r\n      this.loadElement();\r\n      // 绑定流程画布上的事件\r\n      this.initEvent();\r\n    },\r\n    initData() {\r\n      // 获取flow.json数据 及配置项\r\n      return this.$http\r\n        .all([\r\n          this.$http.get(\"./static/pd_attributes/dsf.flow.json\"),\r\n          this.$http.get(\"wfm/getWFDefinition\", {\r\n            sID: this.sID,\r\n          }),\r\n        ])\r\n        .then((res) => {\r\n          this.config = res[0];\r\n          this.flowInfo = res[1].data.WorkFlow;\r\n        })\r\n        .catch((error) => {\r\n          this.flowInfo = {};\r\n        });\r\n    },\r\n    loadElement() {\r\n      const ElementList = (this.flowInfo && this.flowInfo.ElementList) || [];\r\n      if (ElementList && ElementList.length > 0) {\r\n        for (let i = 0; i < ElementList.length; i++) {\r\n          let element = ElementList[i];\r\n          //节点\r\n          if (element.nodeType == \"node\") {\r\n            let node = element;\r\n            node.in = node.in || [];\r\n            node.out = node.out || [];\r\n            node.point.x = parseFloat(node.point.x);\r\n            node.point.y = parseFloat(node.point.y);\r\n            node = Object.assign(\r\n              {\r\n                x: node.point.x,\r\n                y: node.point.y,\r\n              },\r\n              node\r\n            );\r\n            // 回显 任务类型\r\n            flowTools.forEach((tool) => {\r\n              tool.data.forEach((item) => {\r\n                if (node.attributes.BaseInfo.Type == item.type) {\r\n                  node.attributes.BaseInfo.Type = item.name;\r\n                }\r\n              });\r\n            });\r\n            const newNode = this.addNode(node);\r\n            if (node.nodes) {\r\n              // 显示子节点\r\n              const subNodes = node.nodes;\r\n              newNode.nodes = [];\r\n              newNode.lines = [];\r\n              newNode.events = [];\r\n              subNodes.forEach((item) => {\r\n                item = Object.assign(\r\n                  {\r\n                    x: item.point.x,\r\n                    y: item.point.y,\r\n                  },\r\n                  item\r\n                );\r\n                newNode.nodes.push(this.addSubNode(item, newNode));\r\n              });\r\n            }\r\n            if (node.events) {\r\n              node.events.forEach((event) => {\r\n                let newEvent = new BoundaryEvent(event);\r\n                newEvent.parentNode = node;\r\n                newNode.events.push(newEvent);\r\n              });\r\n            }\r\n            if (node.lines) {\r\n              node.lines.forEach((line) => {\r\n                if (line.linkInfo) {\r\n                  line.linkInfo.fromOffset = parseFloat(line.linkInfo.fromOffset);\r\n                  line.linkInfo.toOffset = parseFloat(line.linkInfo.toOffset);\r\n                }\r\n                // 加到队列里面 等页面渲染后再发通知\r\n                setTimeout(() => {\r\n                  this.$bus.$emit(`addLine${node.id}`, {\r\n                    id: line.id,\r\n                    type: line.type,\r\n                    name: line.name,\r\n                    path: line.path,\r\n                    from: line.from,\r\n                    fromType: line.fromType,\r\n                    to: line.to,\r\n                    linkInfo: line.linkInfo,\r\n                    attributes: line.attributes,\r\n                    parentNodeId: node.id,\r\n                  });\r\n                }, 0);\r\n              });\r\n            }\r\n            this.nodes.push(newNode);\r\n          }\r\n          //线\r\n          else if (element.nodeType == \"line\") {\r\n            let line = element;\r\n            if (line.linkInfo) {\r\n              line.linkInfo.fromOffset = parseFloat(line.linkInfo.fromOffset);\r\n              line.linkInfo.toOffset = parseFloat(line.linkInfo.toOffset);\r\n            }\r\n            this.$bus.$emit(\"addLine\", {\r\n              id: line.id,\r\n              type: line.type,\r\n              name: line.name,\r\n              path: line.path,\r\n              from: line.from,\r\n              fromType: line.fromType,\r\n              isHide: line.isHide,\r\n              to: line.to,\r\n              linkInfo: line.linkInfo,\r\n              attributes: line.attributes,\r\n            });\r\n          }\r\n          //泳道\r\n          else if (element.nodeType == \"lane\") {\r\n            const lane = element;\r\n            this.createLane({\r\n              id: lane.id,\r\n              name: lane.name,\r\n              size: lane.size,\r\n              index: lane.index,\r\n              direction: lane.direction,\r\n              attributes: lane.attributes,\r\n            });\r\n          }\r\n          // 边界事件\r\n          else if (element.nodeType == \"event\") {\r\n            this.events.push(new BoundaryEvent(element));\r\n          }\r\n        }\r\n      }\r\n      this.resize();\r\n    },\r\n    // 保存\r\n    doSave() {\r\n      // var loadingIndex = dsf.layer.loadding();\r\n      flow.attributes.BaseInfo.ID = this.sID;\r\n      let postData = {\r\n        WorkFlow: {\r\n          BaseInfo: flow.attributes.BaseInfo,\r\n          NodeList: [],\r\n          LineList: [],\r\n          EventList: [],\r\n          LaneList: {\r\n            horizontal: [],\r\n            vertical: [],\r\n          },\r\n          ElementList: [],\r\n        },\r\n      };\r\n      this.nodes.forEach((node) => {\r\n        if (node.lines) {\r\n          let nodeLines = dsf.mix(true, [], node.lines);\r\n          node.lines = nodeLines.map((line) => {\r\n            delete line.paper;\r\n            return line;\r\n          });\r\n        }\r\n        if (node.events) {\r\n          node.events = node.events.map((item) => {\r\n            item.parentNodeId = item.parentNode.id;\r\n            delete item.parentNode;\r\n            return { ...item };\r\n          });\r\n        }\r\n      });\r\n      const info = {\r\n        nodes: [...JSON.parse(JSON.stringify(this.nodes))],\r\n        lanes: { ...this.lanes },\r\n        lines: [...this.lines],\r\n        events: [...this.events],\r\n      };\r\n\r\n      //深度复制对象作为流程引擎使用\r\n      let infoCopy = dsf.mix(true, {}, info);\r\n      const copyMap = this.getFlowAllObjectMap(infoCopy);\r\n\r\n      let temp = [],\r\n        deleteLines = [];\r\n      //判断节点特殊操作\r\n      for (let i = 0; i < infoCopy.nodes.length; i++) {\r\n        let node = infoCopy.nodes[i];\r\n        //如果为判断节点 开始\r\n        if (node.type == \"6\") {\r\n          //获取该节点的上一步节点\r\n          let fromNodearr = [],\r\n            toNodearr = [];\r\n          let arr = this.getFromNodes(node);\r\n          if (arr) {\r\n            for (let n = 0; n < arr.length; n++) {\r\n              let nc = arr[n];\r\n              fromNodearr.push(copyMap[nc.id]);\r\n            }\r\n          }\r\n          //获取该节点的下一步个节点\r\n          arr = this.getToNodes(node);\r\n          if (arr) {\r\n            for (let n = 0; n < arr.length; n++) {\r\n              let nc = arr[n];\r\n              toNodearr.push(copyMap[nc.id]);\r\n            }\r\n          }\r\n          const obj = {\r\n            node: node,\r\n            from: fromNodearr,\r\n            to: toNodearr,\r\n          };\r\n          temp.push(obj);\r\n        }\r\n      }\r\n      for (let i = 0; i < temp.length; i++) {\r\n        let obj = temp[i];\r\n        let node = obj.node;\r\n        //判断有没有下一步节点\r\n        if (obj.node[\"out\"].length > 0) {\r\n          //将判断节点的的出线全部复制给上一步的节点\r\n          for (let c = 0; c < obj.from.length; c++) {\r\n            let fn = obj.from[c];\r\n            for (let n = 0; n < obj.node[\"out\"].length; n++) {\r\n              let lineId = obj.node[\"out\"][n];\r\n              let line_copy = Object.assign(true, {}, copyMap[lineId]);\r\n              line_copy.attributes.ID = line_copy.id + \"_\" + fn.id;\r\n              line_copy.attributes.StartNodeID = fn.id;\r\n              infoCopy.lines.push(line_copy);\r\n              deleteLines.push(lineId);\r\n            }\r\n            fn.attributes.OutLine.SendConditions = obj.node.attributes.OutLine.SendConditions;\r\n            let rfn = getObjById(this.nodes, fn.id);\r\n            if (rfn) {\r\n              rfn.attributes.OutLine.SendConditions = obj.node.attributes.OutLine.SendConditions;\r\n            }\r\n          }\r\n          //删除判断节点入线\r\n          for (let c = 0; c < obj.node[\"in\"].length; c++) {\r\n            deleteLines.push(obj.node[\"in\"][c]);\r\n          }\r\n        } else {\r\n          for (let c = 0; c < obj.from.length; c++) {\r\n            let fn = obj.from[c];\r\n            fn.attributes.OutLine.SendConditions = {\r\n              IsEnabled: \"0\",\r\n            };\r\n            let rfn = getObjById(this.nodes, fn.id);\r\n            if (rfn) {\r\n              rfn.attributes.OutLine.SendConditions = {\r\n                IsEnabled: \"0\",\r\n              };\r\n            }\r\n          }\r\n        }\r\n      }\r\n      //删除多余的线\r\n      for (let i = 0; i < deleteLines.length; i++) {\r\n        for (let n = infoCopy.lines.length - 1; n >= 0; n--) {\r\n          if (infoCopy.lines[n].attributes.ID == deleteLines[i]) {\r\n            infoCopy.lines.splice(n, 1);\r\n          }\r\n        }\r\n      }\r\n      //判断节点特殊操作 结束\r\n      for (let i = 0; i < infoCopy.nodes.length; i++) {\r\n        let node = infoCopy.nodes[i];\r\n        if (node.nodes) {\r\n          node.nodes.forEach((child) => {\r\n            delete child.isRender;\r\n            delete child.edit;\r\n          });\r\n        }\r\n\r\n        flowTools.forEach((tool) => {\r\n          tool.data.forEach((item) => {\r\n            if (node.attributes.BaseInfo.Type == item.name) {\r\n              node.attributes.BaseInfo.Type = item.type;\r\n            }\r\n          });\r\n        });\r\n        postData.WorkFlow.NodeList.push(node.attributes);\r\n        node.nodeType = \"node\";\r\n        postData.WorkFlow.ElementList.push(node);\r\n      }\r\n      for (let i = 0; i < infoCopy.lines.length; i++) {\r\n        let line = infoCopy.lines[i];\r\n        delete line.paper;\r\n        postData.WorkFlow.LineList.push(line.attributes);\r\n        //整理传递给后台的保存参数\r\n        delete line.arrowEnd;\r\n        delete line.isRender;\r\n        line.nodeType = \"line\";\r\n        postData.WorkFlow.ElementList.push(line);\r\n      }\r\n      for (let i = 0; i < infoCopy.events.length; i++) {\r\n        let event = infoCopy.events[i];\r\n        postData.WorkFlow.EventList.push(event.attributes);\r\n        //整理传递给后台的保存参数\r\n        event.nodeType = \"event\";\r\n        postData.WorkFlow.ElementList.push(event);\r\n      }\r\n\r\n      for (let i = 0; i < info.lanes.horizontal.length; i++) {\r\n        let lane = info.lanes.horizontal[i];\r\n        let n = deepClone(lane);\r\n        delete n.isRender;\r\n        postData.WorkFlow.LaneList.horizontal.push(lane.attributes);\r\n        n.nodeType = \"lane\";\r\n        postData.WorkFlow.ElementList.push(n);\r\n      }\r\n      for (let i = 0; i < info.lanes.vertical.length; i++) {\r\n        let lane = info.lanes.vertical[i];\r\n        let n = deepClone(lane);\r\n        delete n.isRender;\r\n        postData.WorkFlow.LaneList.vertical.push(lane.attributes);\r\n        n.nodeType = \"lane\";\r\n        postData.WorkFlow.ElementList.push(n);\r\n      }\r\n      const param = {\r\n        sData: JSON.stringify(postData),\r\n      };\r\n      this.$http\r\n        .post(\"wfm/saveWFDefinition\", param)\r\n        .done((result) => {\r\n          if (result.success) {\r\n            dsf.layer.message(\"保存成功\", true);\r\n          } else {\r\n            dsf.layer.message(\"保存失败\", false);\r\n          }\r\n        })\r\n        .error(() => {\r\n          dsf.layer.message(\"保存失败\", false);\r\n        });\r\n    },\r\n    initEvent() {\r\n      document.addEventListener(\"dragover\", (e) => {\r\n        if (this.dragNode) {\r\n          this.hasMoved = true;\r\n          this.isCtrlKey = e.ctrlKey; // dragend时候 ctrlKey一直是false 故这么解决\r\n          this.dragToolOver(e);\r\n        }\r\n        if (this.dragEvent) {\r\n          this.dragEventOver(e);\r\n        }\r\n      });\r\n      document.addEventListener(\"dragend\", (e) => {\r\n        if (!this.hasMoved && this.dragNode) {\r\n          this.dragNode && document.body.removeChild(this.dragNode);\r\n          this.dragNode = null;\r\n          this.$bus.$emit(\"isMoveNode\", false);\r\n          this.hasMoved = false;\r\n        }\r\n        if (this.dragNode) {\r\n          this.dragToolEnd(e);\r\n          this.hasMoved = false;\r\n        }\r\n        if (this.dragEvent) {\r\n          this.dragEventEnd(e);\r\n          this.dragEvent && document.body.removeChild(this.dragEvent);\r\n          this.dragEvent = null;\r\n          this.cloneObj = null;\r\n          this.crashNode = null;\r\n          this.$bus.$emit(\"endMoveEvent\", true);\r\n        }\r\n      });\r\n      this.$bus.$on(\"update-baseLine\", (baseLine) => {\r\n        this.baseLine = baseLine;\r\n      });\r\n      this.$bus.$on(\"update-checked\", (checked) => {\r\n        this.checked = checked;\r\n      });\r\n      this.$bus.$on(\"parentAutoScroll\", this.parentAutoScroll);\r\n      this.$bus.$on(\"autoScroll\", this.autoScroll);\r\n      this.$bus.$on(\"resize\", this.resize);\r\n      this.$bus.$on(\"dragCloneEvent\", this.dragCloneEvent);\r\n      this.$bus.$on(\"dragNode\", this.dragTool);\r\n      // this.$bus.$on('showSubNode', this.showSubNode);\r\n      this.$bus.$on(\"startGlobalMove\", this.startGlobalMove);\r\n      this.$bus.$on(\"startCopyNodes\", this.startCopyNodes);\r\n      this.$bus.$on(\"deleteLine\", this.deleteLine);\r\n      this.$bus.$on(\"initSubNode\", this.initSubNode);\r\n      document.addEventListener(\"keydown\", this.keydown);\r\n\r\n      window.onresize = () => {\r\n        this.reset();\r\n        this.resize();\r\n      };\r\n      this.$refs.root.addEventListener(\"mousedown\", (e) => {\r\n        const selectedList = this.$store.state.flow.selectedList || null;\r\n        // if (e.ctrlKey && selectedList && selectedList.length > 1) {\r\n        //   // this.startGlobalMove(e);\r\n        //   //如果按住ctrl键，则开始复制多个节点\r\n        // } else {\r\n        // 点击空白处 父父节点不是子流程\r\n        if (e.target.tagName === \"svg\" && e.target.parentElement.parentElement.className.indexOf(\"subprocess\") === -1) {\r\n          this.checked = flow;\r\n          this.$bus.$emit(\"selectGlobal\", null);\r\n          this.isGlobalSelect = true;\r\n          this.selectGlobalPos = this.$store.getters[\"flow/getMousePointByCanvas\"]({\r\n            x: e.pageX,\r\n            y: e.pageY,\r\n          });\r\n        }\r\n        // }\r\n      });\r\n      //鼠标移动过程中的操作\r\n      // 载入私有方法(root内鼠标按下事件、root内鼠标移动事件、root内双击编辑事件、泳道插入事件)\r\n      this.$refs.root.addEventListener(\"mousemove\", (e) => {\r\n        if (this.readOnly) {\r\n          return;\r\n        }\r\n        this.setCursor(e);\r\n        if (this.isGlobalPosMove) {\r\n          this.globalMove(e);\r\n        }\r\n\r\n        if (this.isGlobalSelect) {\r\n          this.selectGlobalMove(e);\r\n        }\r\n\r\n        if (this.isCopyNodes) {\r\n          this.nodesMove(e);\r\n        }\r\n      });\r\n      document.addEventListener(\"mouseup\", (e) => {\r\n        if (this.isGlobalPosMove) {\r\n          this.isGlobalPosMove = false;\r\n          this.globalPos = null;\r\n          this.resize();\r\n          // 删除边界的点\r\n          this.$store.commit(\"flow/clearPoints\");\r\n        }\r\n\r\n        if (this.isGlobalSelect) {\r\n          this.selectGlobalEnd(e);\r\n          this.resize();\r\n          // 删除边界的点\r\n          this.$store.commit(\"flow/clearPoints\");\r\n        }\r\n\r\n        if (this.isCopyNodes) {\r\n          this.nodesMoveEnd(e);\r\n        }\r\n      });\r\n      // 滚动滑轮事件\r\n      this.$refs.ds_page.addEventListener(\"wheel\", this.scrollwheel, true);\r\n      // 复制事件\r\n      document.addEventListener(\"copy\", (e) => {\r\n        if (this.$store.state.flow.selectedList.length > 0) {\r\n          this.documentCopy(e);\r\n        }\r\n      });\r\n      document.addEventListener(\"paste\", (e) => {\r\n        if (!this.ctrlCopyNodes) {\r\n          this.pasteNode(e);\r\n        }\r\n      });\r\n    },\r\n    initSubNode(node, ElementList) {\r\n      node.open.show = true;\r\n      node.lines &&\r\n        node.lines.forEach((line) => {\r\n          line.remove();\r\n        });\r\n      this.$set(node, \"nodes\", []);\r\n      this.$set(node, \"lines\", []);\r\n      this.$set(node, \"events\", []);\r\n      ElementList.forEach((element) => {\r\n        //节点\r\n        if (element.nodeType == \"node\") {\r\n          // 显示子节点\r\n          Object.assign(element, {\r\n            x: element.point.x,\r\n            y: element.point.y,\r\n          });\r\n          node.nodes.push(this.addSubNode(element, node));\r\n        }\r\n        //线\r\n        else if (element.nodeType == \"line\") {\r\n          let line = element;\r\n          if (line.linkInfo) {\r\n            line.linkInfo.fromOffset = parseFloat(line.linkInfo.fromOffset);\r\n            line.linkInfo.toOffset = parseFloat(line.linkInfo.toOffset);\r\n          }\r\n          // 加到队列里面 等页面渲染后再发通知\r\n          setTimeout(() => {\r\n            this.$bus.$emit(`addLine${node.id}`, {\r\n              id: line.id,\r\n              type: line.type,\r\n              name: line.name,\r\n              path: line.path,\r\n              from: line.from,\r\n              fromType: line.fromType,\r\n              to: line.to,\r\n              linkInfo: line.linkInfo,\r\n              attributes: line.attributes,\r\n              parentNodeId: node.id,\r\n            });\r\n          }, 0);\r\n        }\r\n        // 边界事件\r\n        else if (element.nodeType == \"event\") {\r\n          let newEvent = new BoundaryEvent(element);\r\n          newEvent.parentNode = node;\r\n          newNode.events.push(newEvent);\r\n        }\r\n      });\r\n      this.nodeResize(node);\r\n    },\r\n    copyNewNode(ev, tool, offset, copy) {\r\n      ev.dataTransfer && ev.dataTransfer.setDragImage(new Image(), 0, 0); // 设置 拖动背景图为空\r\n      const target = ev.target || ev;\r\n      let cloneNode = target.cloneNode(true);\r\n      cloneNode.setAttribute(\"draggable\", true);\r\n      cloneNode.offset = {\r\n        x: offset ? offset.x : 0,\r\n        y: offset ? offset.y : 0,\r\n      };\r\n      // 节点之间拖动\r\n      if (copy) {\r\n        cloneNode.copyNode = tool;\r\n      }\r\n      if (!copy && tool.type === 102) {\r\n        cloneNode.tool = tool;\r\n      }\r\n      cloneNode.className = cloneNode.className + \" drag_nodeOuter\";\r\n      Object.assign(cloneNode.style, {\r\n        position: \"absolute\",\r\n        zIndex: 9999,\r\n        top: this.toPx(ev.pageY - ((tool.padding || 0) + cloneNode.offset.y) * this.scale),\r\n        left: this.toPx(ev.pageX - ((tool.padding || 0) + cloneNode.offset.x) * this.scale),\r\n        pointerEvents: \"none\",\r\n        cursor: \"move\",\r\n        transform: `scale(${this.scale}) translateZ(0px)`,\r\n        transformOrigin: \"left top\",\r\n      });\r\n      document.body.appendChild(cloneNode);\r\n      this.$bus.$emit(\"isMoveNode\", copy ? cloneNode.copyNode : cloneNode);\r\n      return cloneNode;\r\n    },\r\n    startCopyNodes(e) {\r\n      this.isCopyNodes = true;\r\n      this.copyNodesPos = {\r\n        x: e.pageX,\r\n        y: e.pageY,\r\n      };\r\n    },\r\n    createCopyNodes(e) {\r\n      //复制多个节点\r\n      const selectedList = this.$store.state.flow.selectedList || null;\r\n      if (selectedList && selectedList.length > 1) {\r\n        this.copyNodes = [];\r\n        selectedList.forEach((node) => {\r\n          const target = document.querySelector(`.nodeOuter[data-id=\"${node.id}\"]`);\r\n          const point = {\r\n            x: node.point.x * this.scale,\r\n            y: node.point.y * this.scale,\r\n          };\r\n          let getPoint = this.$store.getters[\"flow/getMousePointByPoint\"](point);\r\n          target.pageX = getPoint.x;\r\n          target.pageY = getPoint.y;\r\n          const copyNode = this.copyNewNode(target, node, null, true);\r\n          copyNode.point = getPoint;\r\n          this.copyNodes.push(copyNode);\r\n        });\r\n      }\r\n    },\r\n    dragTool(ev, tool, offset, copy) {\r\n      this.dragNode = this.copyNewNode(ev, tool, offset, copy);\r\n    },\r\n    getDisplacement(e) {\r\n      const localMouse = {\r\n        x: e.pageX,\r\n        y: e.pageY,\r\n      };\r\n      const last_p = getGridPoint(this.copyNodesPos);\r\n      const move_p = getGridPoint(localMouse);\r\n      return {\r\n        x: move_p.x - last_p.x,\r\n        y: move_p.y - last_p.y,\r\n      }; // 位移\r\n    },\r\n    nodesMove(e) {\r\n      const displacement = this.getDisplacement(e); // 位移\r\n      if ((!this.copyNodes || (this.copyNodes && this.copyNodes.length === 0)) && (Math.abs(displacement.x) > 5 || Math.abs(displacement.y) > 5)) {\r\n        // 当位移大于5\r\n        this.createCopyNodes(e);\r\n      }\r\n      this.copyNodes.forEach((node) => {\r\n        const copyNode = node.copyNode;\r\n        const offset = node.offset;\r\n        const end = {\r\n          x: node.point.x + displacement.x - offset.x * this.scale,\r\n          y: node.point.y + displacement.y - offset.y * this.scale,\r\n        };\r\n        node.style.top = this.toPx(end.y);\r\n        node.style.left = this.toPx(end.x);\r\n      });\r\n      this.isCtrlKey = e.ctrlKey;\r\n    },\r\n    dragToolOver(e) {\r\n      const node = this.dragNode;\r\n      const offset = node.offset;\r\n      node.style.top = this.toPx(e.pageY - offset.y * this.scale);\r\n      node.style.left = this.toPx(e.pageX - offset.x * this.scale);\r\n      const copyNode = node.copyNode;\r\n      this.endTarget = this.getTargetIsNodes(e.target, copyNode || node.tool);\r\n      if (!this.endTarget) {\r\n        return;\r\n      }\r\n      const className = this.endTarget && this.endTarget.className;\r\n      if (className.indexOf(\"nodes isSub\") > -1) {\r\n        const node = getObjByTarget(this.nodes, this.endTarget);\r\n        this.$bus.$emit(\"dragToSubNode\", copyNode !== node ? node : null);\r\n      } else {\r\n        this.$bus.$emit(\"dragToSubNode\", null);\r\n      }\r\n      if (copyNode) {\r\n        this.$bus.$emit(`moveCopyNode${copyNode.parentNodeId || \"\"}`, e, copyNode);\r\n      }\r\n    },\r\n    getTargetIsNodes(target, copyNode) {\r\n      const svgRoot = document.querySelector(\".svgRoot\");\r\n      if (!svgRoot.contains(target)) {\r\n        return null;\r\n      }\r\n      // 子流程不能拖动到子流程\r\n      if (copyNode && copyNode.type == \"102\") {\r\n        if (target.className.indexOf(\"nodes isSub\") > -1) {\r\n          return this.getTargetIsNodes(target.parentElement);\r\n        }\r\n      }\r\n      if (target.className.indexOf(\"nodes\") > -1) {\r\n        return target;\r\n      }\r\n      return this.getTargetIsNodes(target.parentElement);\r\n    },\r\n    getBeforeCopyLine(nodes) {\r\n      // 获取拷贝节点之间的线\r\n      let lineIds = [];\r\n      nodes.forEach((item) => {\r\n        lineIds = [...lineIds, ...item.out, ...item.in];\r\n      });\r\n      lineIds = [...new Set(lineIds)]; // 去重\r\n\r\n      let fromNodeIds = [];\r\n      let toNodeIds = [];\r\n      let newLines = [];\r\n      lineIds.forEach((lineId) => {\r\n        let line = getObjById(this.lines, lineId);\r\n        if (!line) {\r\n          return;\r\n        }\r\n        let from;\r\n        if (line.fromType === \"event\") {\r\n          from = getObjById(this.events, line.from);\r\n        } else {\r\n          from = getObjById(nodes, line.from);\r\n        }\r\n        const to = getObjById(nodes, line.to);\r\n        if (from && to) {\r\n          // 保证是节点之间的线\r\n          const newLine = deepClone(line);\r\n          newLine.id = tools.uuid();\r\n          fromNodeIds.push({ line: newLine, nodeId: from.id });\r\n          toNodeIds.push({ line: newLine, nodeId: to.id });\r\n          newLines.push(newLine);\r\n        }\r\n      });\r\n      return {\r\n        fromNodeIds,\r\n        toNodeIds,\r\n        newLines,\r\n      };\r\n    },\r\n    resetLineFromAndTo(fromNodeIds, toNodeIds, newNode, copyNode) {\r\n      if (fromNodeIds.length > 0) {\r\n        fromNodeIds.forEach((item) => {\r\n          if (item.nodeId === copyNode.id) {\r\n            newNode.in.push(item.line.id);\r\n            item.line.from = newNode.id;\r\n          }\r\n        });\r\n      }\r\n      if (toNodeIds.length > 0) {\r\n        toNodeIds.forEach((item) => {\r\n          if (item.nodeId === copyNode.id) {\r\n            newNode.out.push(item.line.id);\r\n            item.line.to = newNode.id;\r\n          }\r\n        });\r\n      }\r\n    },\r\n    copyEventsLines(newLines) {\r\n      newLines.forEach((line) => {\r\n        if (line.fromType === \"event\") {\r\n          // 边界事件\r\n          const event = getObjById(this.events, line.from, \"fromId\");\r\n          if (event) {\r\n            delete event.fromId;\r\n            line.from = event.id;\r\n          } else {\r\n            line.from = null;\r\n          }\r\n        }\r\n        if (line.from && line.to) {\r\n          this.$bus.$emit(\"addLine\", {\r\n            id: line.id,\r\n            type: line.type,\r\n            name: line.name,\r\n            from: line.from,\r\n            fromType: line.fromType,\r\n            to: line.to,\r\n            linkInfo: line.linkInfo,\r\n          });\r\n        }\r\n      });\r\n    },\r\n    nodesMoveEnd(e) {\r\n      if (this.copyNodes && this.copyNodes.length > 0) {\r\n        const nodes = this.copyNodes.map((item) => item.copyNode);\r\n        const { fromNodeIds, toNodeIds, newLines } = this.getBeforeCopyLine(nodes);\r\n        const displacement = this.getDisplacement(e);\r\n        const selectedList = [];\r\n        let isMove;\r\n        this.copyNodes.forEach((node) => {\r\n          const copyNode = node.copyNode;\r\n          const offset = node.offset;\r\n          const end = {\r\n            pageX: node.point.x + displacement.x,\r\n            pageY: node.point.y + displacement.y,\r\n          };\r\n          const newNode = this.nodeMoveEnd(end, node);\r\n          if (newNode.id === copyNode.id) {\r\n            isMove = true;\r\n          } else {\r\n            this.resetLineFromAndTo(fromNodeIds, toNodeIds, newNode, copyNode);\r\n          }\r\n          this.checked = newNode;\r\n          selectedList.push(newNode);\r\n        });\r\n        if (!isMove) {\r\n          this.copyEventsLines(newLines);\r\n        }\r\n        // 选中拷贝后的节点\r\n        this.$store.commit(\"flow/setSelectedList\", selectedList);\r\n      }\r\n      this.isCopyNodes = false;\r\n      this.copyNodesPos = null;\r\n      this.copyNodes = [];\r\n      this.$bus.$emit(\"isMoveNode\", false);\r\n    },\r\n    nodeMoveEnd(e, node) {\r\n      let newNode, point, isMove, fromCopyId;\r\n      // 节点的拖动\r\n      const copyNode = node && node.copyNode;\r\n      if (copyNode) {\r\n        const offset = node.offset;\r\n        // 从子流程中拖到流程中\r\n        if (copyNode.parentNodeId) {\r\n          // 删除子流程的节点\r\n          this.deleteNode(copyNode);\r\n          delete copyNode.id;\r\n          delete copyNode.parentNodeId;\r\n          delete copyNode.point;\r\n          point = Object.assign(copyNode, {\r\n            x: e.pageX - offset.x * this.scale > copyNode.padding ? e.pageX - offset.x * this.scale : copyNode.padding,\r\n            y: e.pageY - offset.y * this.scale > copyNode.padding ? e.pageY - offset.y * this.scale : copyNode.padding,\r\n            mouseConvert: true,\r\n          });\r\n        } else {\r\n          // 流程位置移动\r\n          const mp = this.$store.getters[\"flow/getMousePointByCanvas\"]({\r\n            x: e.pageX - offset.x * this.scale,\r\n            y: e.pageY - offset.y * this.scale,\r\n          });\r\n          // let p = getGridPoint(mp);\r\n          let p = mp;\r\n          p = {\r\n            x: p.x > copyNode.padding ? p.x : copyNode.padding,\r\n            y: p.y > copyNode.padding ? p.y : copyNode.padding,\r\n          };\r\n          // 按住ctrl 就是复制\r\n          if (this.isCtrlKey) {\r\n            // 复制一个节点\r\n            fromCopyId = copyNode.id;\r\n            const id = tools.uuid();\r\n            const newNode = JSON.parse(JSON.stringify(copyNode));\r\n            point = Object.assign({}, newNode, {\r\n              id: id,\r\n              out: [],\r\n              in: [],\r\n              x: p.x,\r\n              y: p.y,\r\n            });\r\n            point.attributes.BaseInfo.ID = id;\r\n          } else {\r\n            // 缩放后的坐标\r\n            p = {\r\n              x: p.x / this.scale,\r\n              y: p.y / this.scale,\r\n            };\r\n            // 只是移动位置\r\n            p = getGridPoint(p);\r\n            copyNode.point.x = p.x;\r\n            copyNode.point.y = p.y;\r\n            this.$bus.$emit(\"nodeMove\", copyNode);\r\n            isMove = true;\r\n          }\r\n        }\r\n      }\r\n      if (!isMove) {\r\n        // 从环节类型中拖动到流程\r\n        const type = e.target && e.target.getAttribute(\"nodetype\");\r\n        const sort = e.target && e.target.getAttribute(\"sort\");\r\n        point = point || {\r\n          type: type,\r\n          sort: sort,\r\n          x: e.pageX,\r\n          y: e.pageY,\r\n          mouseConvert: true,\r\n        };\r\n        newNode = this.copyNodeNext(point, fromCopyId, copyNode);\r\n      }\r\n      document.body.removeChild(node);\r\n      this.resize();\r\n      return isMove ? copyNode : newNode;\r\n    },\r\n    copyNodeNext(point, fromCopyId, copyNode) {\r\n      const node = this.addNode(point);\r\n      this.nodes.push(node);\r\n      if (fromCopyId) {\r\n        // 节点复制后 复制边界事件\r\n        this.copyNodeEvent(fromCopyId, node);\r\n      }\r\n      // 子流程拷贝后 子节点复制\r\n      if (copyNode && copyNode.nodes && copyNode.nodes.length > 0) {\r\n        node.nodes = [];\r\n        copyNode.nodes.forEach((item) => {\r\n          const subNode = deepClone(item);\r\n          const subPoint = Object.assign(\r\n            {\r\n              x: subNode.point.x,\r\n              y: subNode.point.y,\r\n            },\r\n            subNode\r\n          );\r\n          node.nodes.push(this.addSubNode(subPoint, node));\r\n        });\r\n      }\r\n      return node;\r\n    },\r\n    dragToolEnd(e) {\r\n      if (this.endTarget) {\r\n        const className = this.endTarget && this.endTarget.className;\r\n        const node = getObjByTarget(this.nodes, this.endTarget);\r\n        if (className.indexOf(\"nodes isSub\") > -1 && !this.verifySub(node)) {\r\n          if (node) {\r\n            let point, isMove;\r\n            // 节点的拖动\r\n            if (this.dragNode && this.dragNode.copyNode) {\r\n              const copyNode = this.dragNode.copyNode;\r\n              const offset = this.dragNode.offset;\r\n              // 从流程中拖到子流程中 或者子流程到宁外一个子流程\r\n              if (!copyNode.parentNodeId || (copyNode.parentNodeId && copyNode.parentNodeId !== node.id)) {\r\n                point = Object.assign(copyNode, {\r\n                  x: e.pageX - offset.x * this.scale > copyNode.padding ? e.pageX - offset.x * this.scale : copyNode.padding,\r\n                  y: e.pageY - offset.y * this.scale > copyNode.padding ? e.pageY - offset.y * this.scale : copyNode.padding,\r\n                  mouseConvert: true,\r\n                });\r\n                this.deleteNode(copyNode);\r\n                delete copyNode.id;\r\n              } else {\r\n                // 在当前子流程中 只是位置移动\r\n                point = {\r\n                  x: e.pageX - offset.x * this.scale,\r\n                  y: e.pageY - offset.y * this.scale,\r\n                  mouseConvert: true,\r\n                };\r\n                const options = this.getOptions(point);\r\n                copyNode.point.x = options.x - node.point.x;\r\n                // 子节点相对于父节点的位置\r\n                copyNode.point.y = options.y - node.point.y - node.imgHeight - node.padding * 2;\r\n                this.$bus.$emit(`nodeMove${copyNode.parentNodeId}`, copyNode);\r\n                this.$bus.$emit(`cutOffLine${copyNode.parentNodeId}`, copyNode);\r\n                isMove = true;\r\n              }\r\n            }\r\n            if (!isMove) {\r\n              // 从环节类型中拖动到子流程\r\n              const type = e.target && e.target.getAttribute(\"nodetype\");\r\n              const sort = e.target && e.target.getAttribute(\"sort\");\r\n              point = point || {\r\n                type: type,\r\n                sort: sort,\r\n                x: e.pageX,\r\n                y: e.pageY,\r\n                mouseConvert: true,\r\n              };\r\n              const subNode = this.addSubNode(point, node);\r\n              node.nodes ? node.nodes.push(subNode) : this.$set(node, \"nodes\", [subNode]);\r\n              this.$set(node, \"lines\", node.lines || []);\r\n              this.$set(node, \"events\", node.events || []);\r\n              this.nodeResize(node);\r\n              this.$bus.$emit(`cutOffLine${subNode.parentNodeId}`, subNode);\r\n            }\r\n          }\r\n          document.body.removeChild(this.dragNode);\r\n        } else if (className.indexOf(\"nodes\") > -1 || (className.indexOf(\"nodes isSub\") > -1 && this.verifySub(node))) {\r\n          this.checked = this.nodeMoveEnd(e, this.dragNode);\r\n          this.$bus.$emit(\"cutOffLine\", this.checked);\r\n          this.$store.commit(\"flow/setSelectedList\", [this.checked]);\r\n        }\r\n      } else {\r\n        document.body.removeChild(this.dragNode);\r\n      }\r\n      this.dragNode = null;\r\n      this.$bus.$emit(\"isMoveNode\", false);\r\n    },\r\n    dragBoundaryEvent(ev, event) {\r\n      ev.dataTransfer && ev.dataTransfer.setDragImage(new Image(), 0, 0); // 设置 拖动背景图为空\r\n      this.dragEvent = ev.target.cloneNode(true);\r\n      this.dragEvent.className = \"ds_tool_event_drag\";\r\n      this.dragEvent.setAttribute(\"draggable\", false);\r\n      const cloneTool = deepClone(event);\r\n      this.cloneObj = new BoundaryEvent(cloneTool, ev);\r\n      Object.assign(this.dragEvent.style, {\r\n        position: \"absolute\",\r\n        zIndex: 9999,\r\n        width: this.toPx(this.cloneObj.width),\r\n        height: this.toPx(this.cloneObj.height),\r\n        top: this.toPx(ev.pageY - ev.offsetY),\r\n        left: this.toPx(ev.pageX - ev.offsetX),\r\n        pointerEvents: \"none\",\r\n        transform: `scale(${this.scale}) translateZ(0px)`,\r\n        transformOrigin: \"left top\",\r\n      });\r\n      document.body.appendChild(this.dragEvent);\r\n      this.$bus.$emit(\"startMoveEvent\", this.dragEvent);\r\n    },\r\n    dragEventOver(e) {\r\n      if (this.dragEvent) {\r\n        // 拖动边界事件\r\n        const comp = this.computedPoint(e, this.dragEvent);\r\n        if (Array.from(e.target.classList).indexOf(\"task-node\") > -1 || Array.from(e.target.parentElement).indexOf(\"node\")) {\r\n          const parentAndSub = getObjByParentTarget(this.nodes, \"nodes\", e.target);\r\n          if (parentAndSub && !this.verifySub(parentAndSub.parent)) {\r\n            const parentNode = parentAndSub.parent;\r\n            const subNode = parentAndSub.sub;\r\n            this.crashNode = subNode;\r\n            let points = this.$store.getters[\"flow/getPoints\"](subNode.id);\r\n            if (!points) {\r\n              this.$store.commit(\"flow/setPointsByNode\", {\r\n                node: subNode,\r\n                obj: this.cloneObj,\r\n              });\r\n              points = this.$store.getters[\"flow/getPoints\"](subNode.id);\r\n            }\r\n            const subComp = {\r\n              point: {\r\n                x: comp.point.x - parentNode.point.x * this.scale,\r\n                y: comp.point.y - (parentNode.point.y + parentNode.padding + parentNode.imgHeight + parentNode.padding * 2) * this.scale,\r\n              },\r\n            };\r\n            const point = this.getPoint(subComp, points, this.distance);\r\n            if (point) {\r\n              this.cloneObj = Object.assign(this.cloneObj, point, {\r\n                parentNode,\r\n              });\r\n              let getPoint = this.$store.getters[\"flow/getMousePointByPoint\"](point.point);\r\n              getPoint.x = getPoint.x + parentNode.point.x * this.scale;\r\n              getPoint.y = getPoint.y + (parentNode.point.y + parentNode.imgHeight + parentNode.padding * 2) * this.scale;\r\n              this.dragEvent.style.top = this.toPx(getPoint.y);\r\n              this.dragEvent.style.left = this.toPx(getPoint.x);\r\n              return;\r\n            }\r\n          }\r\n          const node = getObjByTarget(this.nodes, e.target);\r\n          // 父节点吸附\r\n          if (node) {\r\n            this.crashNode = node;\r\n            let points = this.$store.getters[\"flow/getPoints\"](node.id);\r\n            if (!points) {\r\n              this.$store.commit(\"flow/setPointsByNode\", {\r\n                node,\r\n                obj: this.cloneObj,\r\n              });\r\n              points = this.$store.getters[\"flow/getPoints\"](node.id);\r\n            }\r\n            const point = this.getPoint(comp, points, this.distance);\r\n            if (point) {\r\n              this.cloneObj = Object.assign(this.cloneObj, point);\r\n              const getPoint = this.$store.getters[\"flow/getMousePointByPoint\"](point.point);\r\n              this.dragEvent.style.top = this.toPx(getPoint.y);\r\n              this.dragEvent.style.left = this.toPx(getPoint.x);\r\n              return;\r\n            }\r\n          }\r\n        }\r\n        this.dragEvent.style.top = this.toPx(e.pageY);\r\n        this.dragEvent.style.left = this.toPx(e.pageX);\r\n      }\r\n    },\r\n    dragEventEnd(e) {\r\n      if (e.type === \"drop\") {\r\n        e = event ? event : e;\r\n        e.preventDefault();\r\n      } else {\r\n        if (event.touches) {\r\n          e = event.touches[0] ? event.touches[0] : event;\r\n        }\r\n      }\r\n      if (!this.crashNode) {\r\n        return;\r\n      }\r\n      const points = this.$store.getters[\"flow/getPoints\"](this.crashNode.id);\r\n      let obj = this.computedPoint(e, this.cloneObj);\r\n      if (this.cloneObj.parentNode) {\r\n        const parentNode = this.cloneObj.parentNode;\r\n        obj = {\r\n          point: {\r\n            x: obj.point.x - parentNode.point.x * this.scale,\r\n            y: obj.point.y - (parentNode.point.y + parentNode.padding + parentNode.imgHeight + parentNode.padding * 2) * this.scale,\r\n          },\r\n        };\r\n      }\r\n      const point = this.getPoint(obj, points, this.distance);\r\n      if (point) {\r\n        // 删除吸附点\r\n        points.splice(points.indexOf(point), 1);\r\n        // 当前node上面移动位置\r\n        if (this.cloneObj.from) {\r\n          const events = this.cloneObj.parentNode ? this.cloneObj.parentNode.events : this.events;\r\n          events.forEach((item) => {\r\n            if (item.id === this.cloneObj.from) {\r\n              // 恢复可吸附点\r\n              this.$store.commit(\"flow/addPoint\", {\r\n                id: this.cloneObj.nodeId,\r\n                obj: {\r\n                  point: {\r\n                    x: item.point.x,\r\n                    y: item.point.y,\r\n                  },\r\n                  index: item.index,\r\n                  direction: item.direction,\r\n                },\r\n              });\r\n            }\r\n          });\r\n          this.deleteEvent(this.cloneObj.from, events);\r\n          this.cloneObj.id = this.cloneObj.from;\r\n          delete this.cloneObj.from;\r\n        }\r\n        // 最后位置\r\n        this.cloneObj = Object.assign(this.cloneObj, point);\r\n        this.cloneObj.point.x = this.cloneObj.point.x / this.scale;\r\n        this.cloneObj.point.y = this.cloneObj.point.y / this.scale;\r\n        this.cloneObj.nodeId = this.crashNode.id;\r\n        this.addNewEvent(this.cloneObj);\r\n        this.checked = this.cloneObj;\r\n        if (this.cloneObj.out && this.cloneObj.out.length > 0) {\r\n          this.$bus.$emit(`eventMove${this.cloneObj.parentNode ? this.cloneObj.parentNode.id : \"\"}`, this.cloneObj);\r\n          // this.$bus.$emit(\"eventMove\", this.cloneObj);\r\n        }\r\n      }\r\n    },\r\n    addNewEvent(cloneObj) {\r\n      if (cloneObj.parentNode) {\r\n        this.nodes.forEach((node) => {\r\n          if (cloneObj.parentNode && cloneObj.parentNode.id === node.id) {\r\n            node.events.push(cloneObj);\r\n          }\r\n        });\r\n      } else {\r\n        this.events.push(cloneObj);\r\n      }\r\n    },\r\n    dragCloneEvent(e, event) {\r\n      const copyEvent = deepClone(event);\r\n      copyEvent.from = event.id;\r\n      copyEvent.id = tools.uuid();\r\n      this.dragBoundaryEvent(e, copyEvent);\r\n    },\r\n    // 节点拷贝后 拷贝边界事件\r\n    copyNodeEvent(fromCopyId, node) {\r\n      let copyEvents = [];\r\n      this.events.forEach((ev) => {\r\n        if (ev.nodeId === fromCopyId) {\r\n          copyEvents.push(deepClone(ev));\r\n        }\r\n      });\r\n      if (copyEvents.length === 0) {\r\n        return;\r\n      }\r\n      // 获取边界事件坐标点\r\n      this.$store.commit(\"flow/setPointsByNode\", { node, obj: copyEvents[0] });\r\n      const points = this.$store.getters[\"flow/getPoints\"](node.id);\r\n      points.forEach((item) => {\r\n        copyEvents.forEach((ev) => {\r\n          if (ev.direction === item.direction && ev.index === item.index) {\r\n            ev.fromId = ev.id; // 用于画线\r\n            ev.id = tools.uuid();\r\n            ev.point = item.point;\r\n            ev.nodeId = node.id;\r\n            this.addNewEvent(ev);\r\n          }\r\n        });\r\n      });\r\n    },\r\n    getPoint(obj, all, distance) {\r\n      let point;\r\n      let min = 0;\r\n      all.forEach((item) => {\r\n        let realDistance = this.getDistance(item, obj);\r\n        if (realDistance <= distance) {\r\n          if (min < realDistance) {\r\n            min = realDistance;\r\n            point = item;\r\n          }\r\n        }\r\n      });\r\n      return point;\r\n    },\r\n    getDistance(p1, p2) {\r\n      const dis = Math.sqrt(Math.pow(p1.point.x - p2.point.x, 2) + Math.pow(p1.point.y - p2.point.y, 2));\r\n      // console.log(dis);\r\n      return dis;\r\n    },\r\n    computedPoint(e, moveObj) {\r\n      const mp = this.$store.getters[\"flow/getMousePointByCanvas\"]({\r\n        x: e.pageX,\r\n        y: e.pageY,\r\n      });\r\n      return { point: getGridPoint(mp) };\r\n    },\r\n    getOptions(opts) {\r\n      const options = Object.assign(\r\n        {\r\n          id: tools.uuid(),\r\n          type: 1,\r\n        },\r\n        opts\r\n      );\r\n      let p = {\r\n        x: options.x || 0,\r\n        y: options.y || 0,\r\n      };\r\n      if (options.mouseConvert == true) {\r\n        const mp = this.$store.getters[\"flow/getMousePointByCanvas\"]({\r\n          x: options.x,\r\n          y: options.y,\r\n        });\r\n        p.x = mp.x;\r\n        p.y = mp.y;\r\n      }\r\n      p = getGridPoint(p);\r\n      options.x = p.x / this.scale;\r\n      options.y = p.y / this.scale;\r\n      return options;\r\n    },\r\n    // 增加节点\r\n    addNode(opts) {\r\n      const options = this.getOptions(opts);\r\n      const type = options.type;\r\n      options.name = options.name || (type === \"201\" ? \"开始\" : type === \"299\" ? \"结束\" : \"\") || \"新建环节\" + this.nodes.length;\r\n      const node = new Node(options);\r\n      return node;\r\n    },\r\n    // 增加子流程子节点\r\n    addSubNode(opts, node) {\r\n      const options = this.getOptions(opts);\r\n      options.name = options.name || \"新建环节\" + ((node.nodes && node.nodes.length) || 0);\r\n      if (options.mouseConvert == true) {\r\n        options.x = options.x - node.point.x;\r\n        // 子节点相对于父节点的位置\r\n        options.y = options.y - node.point.y - node.imgHeight - node.padding * 2;\r\n      }\r\n      let children = new Node(options);\r\n      children.parentNodeId = node.id; // 子流程才有\r\n      return children;\r\n    },\r\n    showSubNode(node) {},\r\n    // 监听键盘删除事件\r\n    keydown(e) {\r\n      if (this.checked && this.checked.readOnly) {\r\n        return;\r\n      }\r\n      if (e.keyCode == 46) {\r\n        const selectedList = this.$store.state.flow.selectedList || null;\r\n        // 多选才删除\r\n        if (selectedList && selectedList.length > 1) {\r\n          selectedList.forEach((node) => {\r\n            setTimeout(() => {\r\n              this.deleteNode(node);\r\n            }, 0);\r\n          });\r\n        } else if (this.checked instanceof Node) {\r\n          // 删除单个\r\n          this.deleteNode(this.checked, true);\r\n        } else if (this.checked instanceof Lane) {\r\n          this.$store.commit(\"flow/deleteLane\", this.checked);\r\n          this.resize();\r\n        } else if (this.checked instanceof Line) {\r\n          this.deleteLine(this.checked, true);\r\n        } else if (this.checked instanceof BoundaryEvent) {\r\n          const obj = this.checked;\r\n          for (let i = obj[\"out\"].length - 1; i >= 0; i--) {\r\n            const l = getObjById(this.lines, obj[\"out\"][i]);\r\n            if (l) {\r\n              this.deleteLine(l);\r\n            }\r\n          }\r\n          const events = this.checked.parentNode ? this.checked.parentNode.events : this.events;\r\n          // 删除单个\r\n          this.deleteEvent(this.checked.id, events, true);\r\n        }\r\n        this.checked = {};\r\n      }\r\n    },\r\n    deleteNode(node, isDel) {\r\n      // 删除子流程节点\r\n      let parentNode;\r\n      if (node.parentNodeId) {\r\n        parentNode = this.nodes.find((item) => node.parentNodeId === item.id);\r\n        if (isDel && this.verifySub(parentNode)) {\r\n          return;\r\n        }\r\n      }\r\n      const nodes = node.parentNodeId ? parentNode.nodes : this.nodes;\r\n      const lines = node.parentNodeId ? parentNode.lines : this.lines;\r\n      const events = node.parentNodeId ? parentNode.events : this.events;\r\n      const index = nodes.indexOf(node);\r\n      if (index > -1) {\r\n        const obj = node;\r\n        // 把线连接起来\r\n        if (obj.in.length > 0 && obj.out.length > 0) {\r\n          obj.in.forEach((lineIn) => {\r\n            const getIn = getObjById(lines, lineIn);\r\n            if (getIn) {\r\n              const fromNode = getObjById(nodes, getIn.from);\r\n              obj.out.forEach((lineOut) => {\r\n                const getOut = getObjById(lines, lineOut);\r\n                if (getOut) {\r\n                  const toNode = getObjById(nodes, getOut.to);\r\n                  // 画线\r\n                  const id = tools.uuid();\r\n                  const currentLineInfo = {\r\n                    endPoint: getOut.path[getOut.path.length - 1],\r\n                    fromDirection: getIn.linkInfo.fromDirection,\r\n                    fromNode: fromNode,\r\n                    startPoint: getIn.path[0],\r\n                    targetDirection: getOut.linkInfo.toDirection,\r\n                    targetNode: toNode,\r\n                  };\r\n                  const points = getNodeLinkPoints(currentLineInfo);\r\n                  // getOut.path.splice(0, 1);\r\n                  // getIn.path.splice(getIn.path.length - 1, 1, ...getOut.path);\r\n                  let newLineParam = {\r\n                    id: id,\r\n                    type: getIn.type,\r\n                    name: fromNode.name + \"→\" + toNode.name,\r\n                    path: points,\r\n                    from: getIn.from,\r\n                    fromType: getIn.fromType,\r\n                    isHide: getIn.isHide,\r\n                    to: getOut.to,\r\n                    linkInfo: {\r\n                      fromDirection: getIn.linkInfo.fromDirection,\r\n                      fromOffset: getIn.linkInfo.fromOffset,\r\n                      toDirection: getOut.linkInfo.toDirection,\r\n                      toOffset: getOut.linkInfo.toOffset,\r\n                    },\r\n                    attributes: Object.assign(getIn.attributes, {\r\n                      BaseInfo: {\r\n                        EndNodeID: getOut.to,\r\n                        ID: id,\r\n                        Name: fromNode.name + \"→\" + toNode.name,\r\n                        StartNodeID: getIn.from,\r\n                      },\r\n                    }),\r\n                  };\r\n                  if (node.parentNodeId) {\r\n                    newLineParam.parentNodeId = node.parentNodeId;\r\n                  }\r\n                  this.$bus.$emit(`addLine${node.parentNodeId || \"\"}`, newLineParam);\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n        // 删除线\r\n        for (let i = obj.out.length - 1; i >= 0; i--) {\r\n          const l = getObjById(lines, obj.out[i]);\r\n          if (l) {\r\n            this.deleteLine(l);\r\n          }\r\n        }\r\n        for (let i = obj.in.length - 1; i >= 0; i--) {\r\n          const l = getObjById(lines, obj.in[i]);\r\n          if (l) {\r\n            this.deleteLine(l);\r\n          }\r\n        }\r\n\r\n        // 删除边界事件\r\n        for (let i = 0; i < events.length; i++) {\r\n          let nodeId = events[i].nodeId;\r\n          if (nodeId === obj.id) {\r\n            let event = events[i];\r\n            // 删除线\r\n            for (let j = event.out.length - 1; j >= 0; j--) {\r\n              const line = getObjById(this.lines, event.out[j]);\r\n              if (line) {\r\n                this.deleteLine(line);\r\n              }\r\n            }\r\n            events.splice(i, 1);\r\n            i--;\r\n          }\r\n        }\r\n        // 删除节点\r\n        nodes.splice(index, 1);\r\n      }\r\n    },\r\n    deleteLine(line, isDel) {\r\n      // 删除子流程的线\r\n      let parentNode;\r\n      if (line.parentNodeId) {\r\n        parentNode = this.nodes.find((item) => line.parentNodeId === item.id);\r\n        if (isDel && this.verifySub(parentNode)) {\r\n          return;\r\n        }\r\n      }\r\n      line.remove();\r\n      const nodes = line.parentNodeId ? parentNode.nodes : this.nodes;\r\n      const lines = line.parentNodeId ? parentNode.lines : this.lines;\r\n      const index = lines.indexOf(line);\r\n      if (index > -1) {\r\n        this.deleteFromOrOut(nodes, lines, line, index);\r\n      }\r\n    },\r\n    deleteFromOrOut(nodes, lines, line, index) {\r\n      const from = getObjById(nodes, line.from);\r\n      const to = getObjById(nodes, line.to);\r\n      if (from) {\r\n        const f_index = from[\"out\"].indexOf(line.id);\r\n        if (f_index >= 0) {\r\n          from[\"out\"].splice(f_index, 1);\r\n        }\r\n      }\r\n      if (to) {\r\n        const t_index = to[\"in\"].indexOf(line.id);\r\n        if (t_index >= 0) {\r\n          to[\"in\"].splice(t_index, 1);\r\n        }\r\n      }\r\n      lines.splice(index, 1);\r\n      this.$bus.$emit(\"updateIntersection\");\r\n    },\r\n    deleteEvent(id, events, isDel) {\r\n      const index = (events ? events : this.events).findIndex((ev) => ev.id === id);\r\n      index > -1 && (events ? events : this.events).splice(index, 1);\r\n      // 恢复可吸附点\r\n      this.$store.commit(\"flow/addPoint\", {\r\n        id: this.checked.nodeId,\r\n        obj: {\r\n          point: {\r\n            x: this.checked.point.x,\r\n            y: this.checked.point.y,\r\n          },\r\n          index: this.checked.index,\r\n          direction: this.checked.direction,\r\n        },\r\n      });\r\n      // this.dragEvent && document.body.removeChild(this.dragEvent);\r\n    },\r\n    // 添加泳道\r\n    addLane(direction, index) {\r\n      this.createLane({\r\n        direction: direction,\r\n        index: index,\r\n      });\r\n    },\r\n    createLane(options) {\r\n      const direction = options.direction;\r\n      options.name = options.name || \"泳道\" + (this.lanes[direction].length + 1);\r\n      options.id = options.id || tools.uuid();\r\n      const lane = new Lane(options);\r\n      const before = this.lanes[direction][(options.index || this.lanes[direction].length) - 1];\r\n      if (direction == LaneDirection.vertical) {\r\n        // 水平方向\r\n        lane.left = before ? before.size + before.left : 0;\r\n      } else {\r\n        // 垂直方向\r\n        lane.top = before ? before.size + before.top : 0;\r\n      }\r\n      this.$store.commit(\"flow/addLane\", {\r\n        direction,\r\n        lane,\r\n        index: options.index,\r\n      });\r\n      this.resize();\r\n    },\r\n    onScroll(e) {\r\n      const target = e.target;\r\n      this.$store.commit(\"flow/setSvgRoot\", {\r\n        scrollTop: target.scrollTop,\r\n        scrollLeft: target.scrollLeft,\r\n      });\r\n    },\r\n    //获取上一步节点\r\n    getFromNodes(node) {\r\n      if (!node[\"in\"] || node[\"in\"].length <= 0) {\r\n        return null;\r\n      }\r\n      var arr = [];\r\n      for (let i = 0; i < node[\"in\"].length; i++) {\r\n        var lineId = node[\"in\"][i];\r\n        var line = getObjById(this.lines, lineId);\r\n        if (line) {\r\n          var fn = getObjById(this.nodes, line.from);\r\n          arr.push(fn);\r\n        }\r\n      }\r\n      return arr;\r\n    },\r\n    //获取下一步节点\r\n    getToNodes(node) {\r\n      if (!node[\"out\"] || node[\"out\"].length <= 0) {\r\n        return null;\r\n      }\r\n      var arr = [];\r\n      for (let i = 0; i < node[\"out\"].length; i++) {\r\n        var lineId = node[\"out\"][i];\r\n        var line = getObjById(this.lines, lineId);\r\n        if (line) {\r\n          var fn = getObjById(this.nodes, line.to);\r\n          arr.push(fn);\r\n        }\r\n      }\r\n      return arr;\r\n    },\r\n    getFlowAllObjectMap(info) {\r\n      var dm = {};\r\n      for (let i = 0; i < info.nodes.length; i++) {\r\n        var node = info.nodes[i];\r\n        dm[node.id] = node;\r\n      }\r\n      for (let i = 0; i < info.lines.length; i++) {\r\n        var line = info.lines[i];\r\n        dm[line.id] = line;\r\n      }\r\n      for (let i = 0; i < info.lanes.horizontal.length; i++) {\r\n        var lane = info.lanes.horizontal[i];\r\n        dm[lane.id] = lane;\r\n      }\r\n      for (let i = 0; i < info.lanes.vertical.length; i++) {\r\n        var lane = info.lanes.vertical[i];\r\n        dm[lane.id] = lane;\r\n      }\r\n      return dm;\r\n    },\r\n    drawLine() {\r\n      this.isDrawLine = !this.isDrawLine;\r\n    },\r\n    resize() {\r\n      const minWidth = this.$store.state.flow.page.width;\r\n      const minHeight = this.$store.state.flow.page.height;\r\n      const width = minWidth || 0;\r\n      const height = minHeight || 0;\r\n\r\n      const lastV = this.lanes.vertical[this.lanes.vertical.length - 1];\r\n      // 水平方向泳道标题的宽度\r\n      const horizontalWidth = this.$store.getters[\"flow/lanesWidth\"];\r\n      // 泳道水平长度超出\r\n      if (lastV && lastV.size + lastV.left + horizontalWidth > width) {\r\n        this.width = lastV.size + lastV.left + horizontalWidth;\r\n      } else {\r\n        this.width = minWidth;\r\n      }\r\n\r\n      const lastH = this.lanes.horizontal[this.lanes.horizontal.length - 1];\r\n      // 垂直方向泳道标题的宽度\r\n      const verticalHeight = this.$store.getters[\"flow/lanesHeight\"];\r\n      // 泳道垂直长度超出\r\n      if (lastH && lastH.size + lastH.top + verticalHeight > height) {\r\n        this.height = lastH.size + lastH.top + verticalHeight;\r\n      } else {\r\n        this.height = minHeight;\r\n      }\r\n\r\n      // 和最长的节点宽度比较\r\n      let maxWidth = 0;\r\n      let maxHeigth = 0;\r\n      this.nodes.forEach((node) => {\r\n        if (node.width + node.point.x + node.padding * 2 > maxWidth) {\r\n          maxWidth = node.width + node.point.x + node.padding * 2;\r\n        }\r\n        if (node.height + node.point.y + node.padding * 2 + 20 > maxHeigth) {\r\n          maxHeigth = node.height + node.point.y + node.padding * 2 + 20;\r\n        }\r\n      });\r\n      this.width = this.width > maxWidth ? this.width : maxWidth;\r\n      this.height = this.height > maxHeigth ? this.height : maxHeigth;\r\n    },\r\n    nodeResize(node) {\r\n      // 和最长的节点宽度比较\r\n      let maxWidth = 0;\r\n      let maxHeigth = 0;\r\n      node.nodes.forEach((item) => {\r\n        if (item.width + item.point.x + item.padding * 2 > maxWidth) {\r\n          maxWidth = item.width + item.point.x + item.padding * 2;\r\n        }\r\n        if (item.height + item.point.y + item.padding * 2 + 20 + node.imgHeight + node.padding * 2 > maxHeigth) {\r\n          // 节点高度 + 节点纵坐标 + padding + 名称高度 + 父节点占用高度\r\n          maxHeigth = item.height + item.point.y + item.padding * 2 + 20 + node.imgHeight + node.padding * 2;\r\n        }\r\n      });\r\n      node.width = node.width > maxWidth ? node.width : maxWidth;\r\n      node.height = node.height > maxHeigth ? node.height : maxHeigth;\r\n      this.$bus.$emit(\"nodeMove\", node);\r\n    },\r\n    autoScroll(arg) {\r\n      let point = null;\r\n      const type = arg.type;\r\n      if (type == \"node\") {\r\n        point = arg.point;\r\n        if (arg.mouse.x > this.width / 2) {\r\n          point.x = point.x + arg.data.width + this.maxSizeOffset;\r\n        } else {\r\n          point.x = point.x;\r\n        }\r\n        if (arg.mouse.y > this.height / 2) {\r\n          point.y = point.y + arg.data.height + this.maxSizeOffset;\r\n        } else {\r\n          point.y = point.y;\r\n        }\r\n      } else if (type == \"line\") {\r\n        point = this.$store.getters[\"flow/getMousePointByCanvas\"]({\r\n          x: arg.mouse.x,\r\n          y: arg.mouse.y,\r\n        });\r\n        if (arg.mouse.x > this.width / 2) {\r\n          point.x = point.x + this.maxSizeOffset;\r\n        } else {\r\n          point.x = point.x - this.maxSizeOffset;\r\n        }\r\n        if (arg.mouse.y > this.height / 2) {\r\n          point.y = point.y + this.maxSizeOffset;\r\n        } else {\r\n          point.y = point.y - this.maxSizeOffset;\r\n        }\r\n      } else if (type == \"lane\") {\r\n        point = this.$store.getters[\"flow/getMousePointByCanvas\"]({\r\n          x: arg.mouse.x,\r\n          y: arg.mouse.y,\r\n        });\r\n        if (arg.mouse.x > this.width / 2) {\r\n          point.x = point.x + this.maxSizeOffset;\r\n        } else {\r\n          point.x = point.x;\r\n        }\r\n        if (arg.mouse.y > this.height / 2) {\r\n          point.y = point.y + this.maxSizeOffset;\r\n        } else {\r\n          point.y = point.y;\r\n        }\r\n      }\r\n      //滚动条自动回滚\r\n      let parentElement = this.$refs.ds_page;\r\n      let size, scrollLeft, scrollTop;\r\n      if (point.x < parentElement.scrollLeft) {\r\n        size = Math.abs(parentElement.scrollLeft - point.x);\r\n        scrollLeft = parentElement.scrollLeft;\r\n        parentElement.scrollLeft = scrollLeft - size / 3;\r\n      }\r\n      if (point.y < parentElement.scrollTop) {\r\n        size = Math.abs(parentElement.scrollTop - point.y);\r\n        scrollTop = parentElement.scrollTop;\r\n        parentElement.scrollTop = scrollTop - size / 3;\r\n      }\r\n      if (point.h < parentElement.scrollTop) {\r\n        size = Math.abs(parentElement.scrollLeft - point.x);\r\n        scrollLeft = parentElement.scrollLeft;\r\n        parentElement.scrollLeft = scrollLeft - size / 3;\r\n      }\r\n      //滚动条自动延伸\r\n      if (point.x > parentElement.clientWidth + parentElement.scrollLeft) {\r\n        this.width = point.x;\r\n        size = Math.abs(parentElement.clientWidth + parentElement.scrollLeft - point.x);\r\n        scrollLeft = parentElement.scrollLeft;\r\n        parentElement.scrollLeft = scrollLeft + size / 3;\r\n      }\r\n      if (point.y > parentElement.clientHeight + parentElement.scrollTop) {\r\n        this.height = point.y;\r\n        size = Math.abs(parentElement.clientHeight + parentElement.scrollTop - point.y);\r\n        scrollTop = parentElement.scrollTop;\r\n        parentElement.scrollTop = scrollTop + size / 3;\r\n      }\r\n    },\r\n    parentAutoScroll(arg) {\r\n      // 计算有问题 先不管\r\n      let mouse = arg.mouse;\r\n      let point = arg.point;\r\n      let parent = arg.parent;\r\n      let node = arg.node;\r\n      if (point.x > parent.width + parent.point.x) {\r\n        point.x = point.x + node.width + this.maxSizeOffset;\r\n      } else {\r\n        point.x = point.x;\r\n      }\r\n      if (point.y > parent.height + parent.point.y) {\r\n        point.y = point.y + node.height + this.maxSizeOffset;\r\n      } else {\r\n        point.y = point.y;\r\n      }\r\n      //滚动条自动延伸\r\n      if (point.x > parent.width + 0) {\r\n        parent.width = point.x;\r\n      }\r\n      if (point.y > parent.height + 0) {\r\n        parent.height = point.y;\r\n      }\r\n      this.$bus.$emit(\"nodeMove\", parent);\r\n      this.autoScroll({\r\n        type: \"node\",\r\n        data: parent,\r\n        mouse: {\r\n          x: mouse.x,\r\n          y: mouse.y,\r\n        },\r\n        point: {\r\n          x: point.x,\r\n          y: point.y,\r\n        },\r\n      });\r\n    },\r\n    setCursor(evt) {\r\n      if (evt.target.tagName != \"svg\") {\r\n        var className = evt.target.className || \"\";\r\n        if (evt.target.tagName == \"path\") {\r\n          var segmen = getObjectByTarget(evt.target);\r\n          if (segmen) {\r\n            var mp = this.$store.getters[\"flow/getMousePointByCanvas\"]({\r\n              x: evt.pageX,\r\n              y: evt.pageY,\r\n            });\r\n            if (segmen.type == _LineType.horizontal) {\r\n              if (segmen.index == 0 && Math.abs(segmen.sp.x - mp.x) <= this.dragSize) {\r\n                this.setRootCursor(\"move\");\r\n              } else if (segmen.isLast && Math.abs(segmen.ep.x - mp.x) <= this.dragSize) {\r\n                this.setRootCursor(\"move\");\r\n              } else {\r\n                this.setRootCursor(\"ns-resize\");\r\n              }\r\n            } else {\r\n              if (segmen.index == 0 && Math.abs(segmen.sp.y - mp.y) <= this.dragSize) {\r\n                this.setRootCursor(\"move\");\r\n              } else if (segmen.isLast && Math.abs(segmen.ep.y - mp.y) <= this.dragSize) {\r\n                this.setRootCursor(\"move\");\r\n              } else {\r\n                this.setRootCursor(\"ew-resize\");\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        this.setRootCursor(\"default\");\r\n      }\r\n    },\r\n    setRootCursor(type) {\r\n      this.$refs.root.style.cursor = type;\r\n    },\r\n    startGlobalMove(e) {\r\n      //如果按住shift键，则启动全局位移功能\r\n      this.isGlobalPosMove = true;\r\n      this.globalPos = this.$store.getters[\"flow/getMousePointByCanvas\"]({\r\n        x: e.pageX,\r\n        y: e.pageY,\r\n      });\r\n      this.globalMoveLastMouse = {\r\n        x: e.pageX,\r\n        y: e.pageY,\r\n      };\r\n      this.globalRect = this.getRect();\r\n    },\r\n    globalMove(evt) {\r\n      if (this.isGlobalPosMove) {\r\n        const localMouse = {\r\n          x: evt.pageX,\r\n          y: evt.pageY,\r\n        };\r\n        const last_p = getGridPoint(this.globalMoveLastMouse);\r\n        const move_p = getGridPoint(localMouse);\r\n        const current_p = {\r\n          x: move_p.x - last_p.x,\r\n          y: move_p.y - last_p.y,\r\n        };\r\n        const maxWidth = Number.MIN_VALUE,\r\n          maxHeight = Number.MIN_VALUE;\r\n        if (current_p.x == 0 && current_p.y == 0) {\r\n          return false;\r\n        }\r\n        let x_move = false,\r\n          y_move = false;\r\n        if (this.globalRect.x + current_p.x > 0) {\r\n          this.globalRect.x += current_p.x;\r\n          x_move = true;\r\n        }\r\n        if (this.globalRect.y + current_p.y >= 0) {\r\n          this.globalRect.y += current_p.y;\r\n          y_move = true;\r\n        }\r\n        this.$bus.$emit(\"globalMove\", current_p, x_move, y_move, evt);\r\n        this.globalMoveLastMouse = move_p;\r\n        return;\r\n      }\r\n    },\r\n    getRect() {\r\n      let x = Number.MAX_VALUE,\r\n        y = Number.MAX_VALUE,\r\n        width = Number.MIN_VALUE,\r\n        height = Number.MIN_VALUE;\r\n      for (let i = 0; i < this.nodes.length; i++) {\r\n        let node = this.nodes[i];\r\n        if (node.point.x < x) {\r\n          x = node.point.x;\r\n        }\r\n        if (node.point.x + node.width > width) {\r\n          width = node.point.x + node.width;\r\n        }\r\n        if (node.point.y < y) {\r\n          y = node.point.y;\r\n        }\r\n        if (node.point.y + node.height > height) {\r\n          height = node.point.y + node.height;\r\n        }\r\n      }\r\n      for (let i = 0; i < this.lines.length; i++) {\r\n        let line = this.lines[i];\r\n        for (let n = 0; n < line.path.length; n++) {\r\n          if (line.path[n].x < x) {\r\n            x = line.path[n].x;\r\n          }\r\n          if (line.path[n].x > width) {\r\n            width = line.path[n].x;\r\n          }\r\n          if (line.path[n].y < y) {\r\n            y = line.path[n].y;\r\n          }\r\n          if (line.path[n].y > height) {\r\n            height = line.path[n].y;\r\n          }\r\n        }\r\n      }\r\n      return {\r\n        x: x,\r\n        y: y,\r\n        width: width,\r\n        height: height,\r\n      };\r\n    },\r\n    getWheelDirect(e) {\r\n      e = e || window.event;\r\n      let direction;\r\n      if (e.wheelDelta) {\r\n        //判断浏览器IE，谷歌滑轮事件\r\n        if (e.wheelDelta > 0) {\r\n          //当滑轮向上滚动时\r\n          direction = \"up\";\r\n        }\r\n        if (e.wheelDelta < 0) {\r\n          //当滑轮向下滚动时\r\n          direction = \"down\";\r\n        }\r\n      } else if (e.detail) {\r\n        //Firefox滑轮事件\r\n        if (e.detail > 0) {\r\n          //当滑轮向上滚动时\r\n          direction = \"up\";\r\n        }\r\n        if (e.detail < 0) {\r\n          //当滑轮向下滚动时\r\n          direction = \"down\";\r\n        }\r\n      }\r\n      return direction;\r\n    },\r\n    scrollwheel(e) {\r\n      e = e || window.event;\r\n      // if(e.preventDefault && e.ctrlKey) e.preventDefault();\r\n      // if(e.ctrlKey) e.returnValue = false;\r\n      if (e.wheelDelta && e.ctrlKey) {\r\n        e.preventDefault();\r\n        const direction = this.getWheelDirect(e);\r\n        this.rootScale(direction);\r\n      }\r\n    },\r\n    rootScale(direction) {\r\n      if (direction === \"up\") {\r\n        this.scale = Number((this.scale + 0.05 < 2 ? this.scale + 0.05 : 2).toFixed(2));\r\n      } else {\r\n        this.scale = Number((this.scale > 0.4 ? this.scale - 0.05 : 0.4).toFixed(2));\r\n      }\r\n      this.$store.commit(\"flow/setPage\", {\r\n        scale: this.scale,\r\n      });\r\n      this.$store.commit(\"flow/clearPoints\");\r\n    },\r\n    selectGlobalMove(e) {\r\n      if (!this.globalSelect) {\r\n        this.globalSelect = document.createElement(\"div\");\r\n        this.globalSelect.className = \"select-nodes\";\r\n        Object.assign(this.globalSelect.style, {\r\n          zIndex: 9999,\r\n          transform: `translate3d(${this.selectGlobalPos.x / this.scale}px, ${this.selectGlobalPos.y / this.scale}px, 0)`,\r\n          pointerEvents: \"none\",\r\n        });\r\n        this.$refs.root.appendChild(this.globalSelect);\r\n      }\r\n      if (this.selectGlobalPos) {\r\n        const start = this.selectGlobalPos;\r\n        const end = this.$store.getters[\"flow/getMousePointByCanvas\"]({\r\n          x: e.pageX,\r\n          y: e.pageY,\r\n        });\r\n        let top, left, width, height;\r\n        if (end.x > start.x) {\r\n          left = start.x;\r\n          width = end.x - start.x;\r\n        } else {\r\n          left = end.x;\r\n          width = start.x - end.x;\r\n        }\r\n        if (end.y > start.y) {\r\n          top = start.y;\r\n          height = end.y - start.y;\r\n        } else {\r\n          top = end.y;\r\n          height = start.y - end.y;\r\n        }\r\n        this.selectGlobalPonits.start.x = left / this.scale;\r\n        this.selectGlobalPonits.start.y = top / this.scale;\r\n        this.selectGlobalPonits.end.x = (left + width) / this.scale;\r\n        this.selectGlobalPonits.end.y = (top + height) / this.scale;\r\n        Object.assign(this.globalSelect.style, {\r\n          transform: `translate3d(${left / this.scale}px, ${top / this.scale}px, 0)`,\r\n          width: this.toPx(width / this.scale),\r\n          height: this.toPx(height / this.scale),\r\n        });\r\n      }\r\n    },\r\n    selectGlobalEnd(e) {\r\n      this.isGlobalSelect = false;\r\n      if (this.globalSelect) {\r\n        const end = this.$store.getters[\"flow/getMousePointByCanvas\"]({\r\n          x: e.pageX,\r\n          y: e.pageY,\r\n        });\r\n        this.$bus.$emit(\"selectGlobal\", this.selectGlobalPonits.start, this.selectGlobalPonits.end);\r\n        this.$refs.root.removeChild(this.globalSelect);\r\n        this.globalSelect = null;\r\n      }\r\n    },\r\n    documentCopy(e) {\r\n      const selectedList = this.$store.state.flow.selectedList;\r\n      if (selectedList && selectedList.length > 1) {\r\n        this.ctrlCopyNodes = [...selectedList];\r\n      } else {\r\n        this.ctrlCopyNodes = [this.checked];\r\n      }\r\n    },\r\n    pasteNode(e) {\r\n      if (!this.ctrlCopyNodes) {\r\n        return false;\r\n      }\r\n      let copyNodes = [];\r\n      const { fromNodeIds, toNodeIds, newLines } = this.getBeforeCopyLine(this.ctrlCopyNodes);\r\n      this.ctrlCopyNodes.forEach((item) => {\r\n        const copyNode = item;\r\n        // 复制一个节点\r\n        const fromCopyId = copyNode.id;\r\n        const id = tools.uuid();\r\n        const newcopyNode = JSON.parse(JSON.stringify(copyNode));\r\n        const point = Object.assign({}, newcopyNode, {\r\n          id: tools.uuid(),\r\n          out: [],\r\n          in: [],\r\n          x: copyNode.point.x + 10,\r\n          y: copyNode.point.y + 10,\r\n        });\r\n        point.attributes.BaseInfo.ID = id;\r\n        const newNode = this.copyNodeNext(point, fromCopyId, copyNode);\r\n        this.resetLineFromAndTo(fromNodeIds, toNodeIds, newNode, copyNode);\r\n        copyNodes.push(newNode);\r\n        this.checked = newNode;\r\n      });\r\n      this.copyEventsLines(newLines);\r\n      this.ctrlCopyNodes = copyNodes;\r\n      this.$store.commit(\"flow/setSelectedList\", copyNodes);\r\n    },\r\n    ...FlowFun,\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n@import \"_platform/assets/styles/designer/workFlow.scss\";\r\nbody {\r\n  overflow: hidden;\r\n}\r\n.ds_page {\r\n  overflow: auto;\r\n  .flow {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    .root {\r\n      position: relative;\r\n      min-width: 100%;\r\n      min-height: 100%;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./flow.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./flow.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./flow.vue?vue&type=template&id=8a01208e&\"\nimport script from \"./flow.vue?vue&type=script&lang=js&\"\nexport * from \"./flow.vue?vue&type=script&lang=js&\"\nimport style0 from \"./flow.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../vue-loader/lib/loaders/stylePostLoader.js!../../../../postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./Lanes.vue?vue&type=style&index=0&id=1e31fce0&lang=scss&scoped=true&\"","// const Flow = function (options) {\r\n//   this.options = options;\r\n//   this.attributes = { ...options.attributes };\r\n// }\r\n\r\n// export default Flow;\r\n\r\nfunction exportFlowJson() {\r\n  const paramID = this.sID;\r\n  const zipFileName = this.flowInfo.BaseInfo.Name;\r\n  let url = dsf.url.getWebPath(\"wfk/exportJsonWF\");\r\n  $(\r\n    \"<form action=\" +\r\n    url +\r\n    ' method=\"get\">' + // action请求路径及推送方法\r\n    '<input type=\"text\" name=\"sID\" value=\"' +\r\n    paramID +\r\n    '\"/>' + // 文件id\r\n    '<input type=\"text\" name=\"zipName\" value=\"' +\r\n    zipFileName +\r\n    '\"/>' + // 文件名称\r\n    \"</form>\"\r\n  )\r\n    .appendTo(\"body\")\r\n    .submit()\r\n    .remove();\r\n  // const param = {\r\n  //   sID: this.sID\r\n  // }\r\n  // this.$http\r\n  //   .get(\"wfk/exportJsonWF\", param)\r\n  //   .done((result) => {\r\n  //     if (result) {\r\n  //       dsf.layer.message(\"导出成功\", true);\r\n  //     } else {\r\n  //       dsf.layer.message(\"导出失败\", false);\r\n  //     }\r\n  //   })\r\n  //   .error(() => {\r\n  //     dsf.layer.message(\"导出失败\", false);\r\n  //   });\r\n}\r\n\r\nfunction alignLeft(selectedList, left) {\r\n  selectedList.forEach((node) => {\r\n    node.point.x = left;\r\n    this.$bus.$emit(\"nodeMove\", node);\r\n  });\r\n}\r\n\r\nfunction alignRight(selectedList, right) {\r\n  selectedList.forEach((node) => {\r\n    node.point.x = right - node.width;\r\n    this.$bus.$emit(\"nodeMove\", node);\r\n  });\r\n}\r\n\r\nfunction alignTop(selectedList, top) {\r\n  selectedList.forEach((node) => {\r\n    node.point.y = top;\r\n    this.$bus.$emit(\"nodeMove\", node);\r\n  });\r\n}\r\n\r\nfunction alignBottom(selectedList, bottom) {\r\n  selectedList.forEach((node) => {\r\n    node.point.y = bottom - node.height;\r\n    this.$bus.$emit(\"nodeMove\", node);\r\n  });\r\n}\r\n\r\nfunction alignMiddle(selectedList, middle) {\r\n  selectedList.forEach((node) => {\r\n    node.point.y = middle - node.height / 2;\r\n    this.$bus.$emit(\"nodeMove\", node);\r\n  });\r\n}\r\n\r\nfunction alignCenter(selectedList, center) {\r\n  selectedList.forEach((node) => {\r\n    node.point.x = center - node.width / 2;\r\n    this.$bus.$emit(\"nodeMove\", node);\r\n  });\r\n}\r\n\r\nfunction alignHorizontal(selectedList) {\r\n  // 先排序\r\n  const sortX = selectedList.sort((a, b) => a.point.x - b.point.x);\r\n  // 存放间距\r\n  let spaces = [];\r\n  sortX.reduce((before, after) => {\r\n    const space = after.point.x - (before.point.x + before.width);\r\n    spaces.push(space);\r\n    return after;\r\n  });\r\n  console.log(spaces);\r\n  // 计算平均间距\r\n  const between = spaces.reduce((a, b) => a + b) / spaces.length;\r\n  console.log(between);\r\n  sortX.forEach((node, index) => {\r\n    if (index !== 0 && index !== sortX.length - 1) {\r\n      node.point.x = sortX[index - 1].point.x + sortX[index - 1].width + between;\r\n      this.$bus.$emit(\"nodeMove\", node);\r\n    }\r\n  });\r\n}\r\n\r\nfunction alignVertical(selectedList) {\r\n  // 先排序\r\n  const sortY = selectedList.sort((a, b) => a.point.y - b.point.y);\r\n  // 存放间距\r\n  let spaces = [];\r\n  sortY.reduce((before, after) => {\r\n    const space = after.point.y - (before.point.y + before.height);\r\n    spaces.push(space);\r\n    return after;\r\n  });\r\n  console.log(spaces);\r\n  // 计算平均间距\r\n  const between = spaces.reduce((a, b) => a + b) / spaces.length;\r\n  console.log(between);\r\n  sortY.forEach((node, index) => {\r\n    if (index !== 0 && index !== sortY.length - 1) {\r\n      node.point.y = sortY[index - 1].point.y + sortY[index - 1].height + between;\r\n      this.$bus.$emit(\"nodeMove\", node);\r\n    }\r\n  });\r\n}\r\n\r\nfunction alignment(dir) {\r\n  console.log(dir);\r\n  const selectedList = this.$store.state.flow.selectedList;\r\n  let top = 0;\r\n  let right = 0;\r\n  let bottom = 0;\r\n  let left = 0;\r\n  let middle = 0;\r\n  let center = 0;\r\n  selectedList.forEach((node, index) => {\r\n    const { width, height, point: { x, y } } = node;\r\n    if (index === 0) {\r\n      top = y;\r\n      left = x;\r\n      right = x + width;\r\n      bottom = y + height;\r\n    }\r\n    if (left > x) {\r\n      left = x;\r\n    }\r\n    if (top > y) {\r\n      top = y;\r\n    }\r\n    if (right < x + width) {\r\n      right = x + width;\r\n    }\r\n    if (bottom < y + height) {\r\n      bottom = y + height;\r\n    }\r\n  });\r\n  middle = (top + bottom) / 2;\r\n  center = (left + right) / 2;\r\n  switch (dir) {\r\n    case \"left\":\r\n      this.alignLeft(selectedList, left);\r\n      break;\r\n    case \"top\":\r\n      this.alignTop(selectedList, top);\r\n      break;\r\n    case \"right\":\r\n      this.alignRight(selectedList, right);\r\n      break;\r\n    case \"bottom\":\r\n      this.alignBottom(selectedList, bottom);\r\n      break;\r\n    case \"middle\":\r\n      this.alignMiddle(selectedList, middle);\r\n      break;\r\n    case \"center\":\r\n      this.alignCenter(selectedList, center);\r\n      break;\r\n    case \"horizontal\":\r\n      this.alignHorizontal(selectedList);\r\n      break;\r\n    case \"vertical\":\r\n      this.alignVertical(selectedList);\r\n      break;\r\n  }\r\n  console.log(top, left, right, bottom, middle, center);\r\n  // this.$bus.$emit(\"nodeMove\", copyNode);\r\n}\r\n\r\nexport default {\r\n  exportFlowJson,\r\n  alignment,\r\n  alignLeft,\r\n  alignRight,\r\n  alignTop,\r\n  alignBottom,\r\n  alignMiddle,\r\n  alignCenter,\r\n  alignHorizontal,\r\n  alignVertical\r\n}","export * from \"-!../../../../mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../vue-loader/lib/loaders/stylePostLoader.js!../../../../postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./flowInfo.vue?vue&type=style&index=0&id=0b6c4c1a&lang=scss&scoped=true&\""],"sourceRoot":""}